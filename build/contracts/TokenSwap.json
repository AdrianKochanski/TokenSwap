{
  "contractName": "TokenSwap",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "_token2",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "updatePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        }
      ],
      "name": "getSwapAmount",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "tokenOutput",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "outputAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"}],\"name\":\"getSwapAmount\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"tokenOutput\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"outputAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TokenSwap.sol\":\"TokenSwap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/TokenSwap.sol\":{\"keccak256\":\"0x7472a376cb902fe45159989d507f68de35877fdc708de88062171df66083669a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1bbf6c525eb22c5583e063779f1b78f2fd4e9dd50605bd32df26c703a0f1df9\",\"dweb:/ipfs/QmbKCZrvGHxvyHEiMz1TdRd5HyQ14JdwxG3FMdNEQohKYp\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620019f9380380620019f98339818101604052810190620000379190620001e3565b620000576200004b620000e960201b60201c565b620000f160201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600381905550505050620002bf565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001c6816200028b565b92915050565b600081519050620001dd81620002a5565b92915050565b600080600060608486031215620001f957600080fd5b60006200020986828701620001b5565b93505060206200021c86828701620001b5565b92505060406200022f86828701620001cc565b9150509250925092565b6000620002468262000261565b9050919050565b60006200025a8262000239565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b62000296816200024d565b8114620002a257600080fd5b50565b620002b08162000281565b8114620002bc57600080fd5b50565b61172a80620002cf6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638d6cc56d1161005b5780638d6cc56d146101005780638da5cb5b1461011c578063a035b1fe1461013a578063f2fde38b1461015857610088565b8063045d03891461008d5780631befa6db146100a957806347e7ef24146100da578063715018a6146100f6575b600080fd5b6100a760048036038101906100a29190610e98565b610174565b005b6100c360048036038101906100be9190610e98565b6105b1565b6040516100d1929190611115565b60405180910390f35b6100f460048036038101906100ef9190610e98565b610800565b005b6100fe610ac7565b005b61011a60048036038101906101159190610ed4565b610b4f565b005b610124610bd5565b6040516101319190611071565b60405180910390f35b610142610bfe565b60405161014f919061121e565b60405180910390f35b610172600480360381019061016d9190610e46565b610c04565b005b600081116101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae9061119e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158061026257508173ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b6102a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102989061115e565b60405180910390fd5b808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102dd92919061108c565b60206040518083038186803b1580156102f557600080fd5b505afa158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d9190610efd565b101561036e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103659061117e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103ab939291906110b5565b602060405180830381600087803b1580156103c557600080fd5b505af11580156103d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fd9190610e6f565b5060008061040b84846105b1565b91509150808273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104499190611071565b60206040518083038186803b15801561046157600080fd5b505afa158015610475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104999190610efd565b10156104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d1906111be565b60405180910390fd5b6000811161051d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105149061119e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105589291906110ec565b602060405180830381600087803b15801561057257600080fd5b505af1158015610586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105aa9190610e6f565b5050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106d857600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506003548473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561067857600080fd5b505afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b09190610f26565b600a6106bc91906112ce565b846106c791906113ec565b6106d1919061124a565b90506107f9565b8373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107f857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561079957600080fd5b505afa1580156107ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d19190610f26565b600a6107dd91906112ce565b600354846107eb91906113ec565b6107f5919061124a565b90505b5b9250929050565b610808610cfc565b73ffffffffffffffffffffffffffffffffffffffff16610826610bd5565b73ffffffffffffffffffffffffffffffffffffffff161461087c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610873906111de565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158061092757508173ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b610966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095d906111fe565b60405180910390fd5b808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016109a292919061108c565b60206040518083038186803b1580156109ba57600080fd5b505afa1580156109ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f29190610efd565b1015610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a9061117e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a70939291906110b5565b602060405180830381600087803b158015610a8a57600080fd5b505af1158015610a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac29190610e6f565b505050565b610acf610cfc565b73ffffffffffffffffffffffffffffffffffffffff16610aed610bd5565b73ffffffffffffffffffffffffffffffffffffffff1614610b43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3a906111de565b60405180910390fd5b610b4d6000610d04565b565b610b57610cfc565b73ffffffffffffffffffffffffffffffffffffffff16610b75610bd5565b73ffffffffffffffffffffffffffffffffffffffff1614610bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc2906111de565b60405180910390fd5b8060038190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b610c0c610cfc565b73ffffffffffffffffffffffffffffffffffffffff16610c2a610bd5565b73ffffffffffffffffffffffffffffffffffffffff1614610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c77906111de565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce79061113e565b60405180910390fd5b610cf981610d04565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610dd781611681565b92915050565b600081519050610dec81611698565b92915050565b600081359050610e01816116af565b92915050565b600081359050610e16816116c6565b92915050565b600081519050610e2b816116c6565b92915050565b600081519050610e40816116dd565b92915050565b600060208284031215610e5857600080fd5b6000610e6684828501610dc8565b91505092915050565b600060208284031215610e8157600080fd5b6000610e8f84828501610ddd565b91505092915050565b60008060408385031215610eab57600080fd5b6000610eb985828601610df2565b9250506020610eca85828601610e07565b9150509250929050565b600060208284031215610ee657600080fd5b6000610ef484828501610e07565b91505092915050565b600060208284031215610f0f57600080fd5b6000610f1d84828501610e1c565b91505092915050565b600060208284031215610f3857600080fd5b6000610f4684828501610e31565b91505092915050565b610f5881611446565b82525050565b610f67816114ad565b82525050565b6000610f7a602683611239565b9150610f858261153c565b604082019050919050565b6000610f9d601583611239565b9150610fa88261158b565b602082019050919050565b6000610fc0601883611239565b9150610fcb826115b4565b602082019050919050565b6000610fe3601483611239565b9150610fee826115dd565b602082019050919050565b6000611006601683611239565b915061101182611606565b602082019050919050565b6000611029602083611239565b91506110348261162f565b602082019050919050565b600061104c601483611239565b915061105782611658565b602082019050919050565b61106b81611496565b82525050565b60006020820190506110866000830184610f4f565b92915050565b60006040820190506110a16000830185610f4f565b6110ae6020830184610f4f565b9392505050565b60006060820190506110ca6000830186610f4f565b6110d76020830185610f4f565b6110e46040830184611062565b949350505050565b60006040820190506111016000830185610f4f565b61110e6020830184611062565b9392505050565b600060408201905061112a6000830185610f5e565b6111376020830184611062565b9392505050565b6000602082019050818103600083015261115781610f6d565b9050919050565b6000602082019050818103600083015261117781610f90565b9050919050565b6000602082019050818103600083015261119781610fb3565b9050919050565b600060208201905081810360008301526111b781610fd6565b9050919050565b600060208201905081810360008301526111d781610ff9565b9050919050565b600060208201905081810360008301526111f78161101c565b9050919050565b600060208201905081810360008301526112178161103f565b9050919050565b60006020820190506112336000830184611062565b92915050565b600082825260208201905092915050565b600061125582611496565b915061126083611496565b9250826112705761126f611500565b5b828204905092915050565b6000808291508390505b60018511156112c5578086048111156112a1576112a06114d1565b5b60018516156112b05780820291505b80810290506112be8561152f565b9450611285565b94509492505050565b60006112d982611496565b91506112e4836114a0565b92506113117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611319565b905092915050565b60008261132957600190506113e5565b8161133757600090506113e5565b816001811461134d576002811461135757611386565b60019150506113e5565b60ff841115611369576113686114d1565b5b8360020a9150848211156113805761137f6114d1565b5b506113e5565b5060208310610133831016604e8410600b84101617156113bb5782820a9050838111156113b6576113b56114d1565b5b6113e5565b6113c8848484600161127b565b925090508184048111156113df576113de6114d1565b5b81810290505b9392505050565b60006113f782611496565b915061140283611496565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561143b5761143a6114d1565b5b828202905092915050565b600061145182611476565b9050919050565b60008115159050919050565b600061146f82611446565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006114b8826114bf565b9050919050565b60006114ca82611476565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45786368616e6765206e6f7420616c6c6f776564210000000000000000000000600082015250565b7f455243323020616c6c6f77616e636520746f6f206c6f77210000000000000000600082015250565b7f5377617020616d6f756e7420746f6f206c6f7721000000000000000000000000600082015250565b7f45524332302062616c616e636520746f6f206c6f772100000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4465706f736974206e6f7420616c6c6f77656421000000000000000000000000600082015250565b61168a81611446565b811461169557600080fd5b50565b6116a181611458565b81146116ac57600080fd5b50565b6116b881611464565b81146116c357600080fd5b50565b6116cf81611496565b81146116da57600080fd5b50565b6116e6816114a0565b81146116f157600080fd5b5056fea264697066735822122060fcac0ec7d90569271e78052a830f443a8af3a6ad05b7fcb167f2687ae5822264736f6c63430008010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638d6cc56d1161005b5780638d6cc56d146101005780638da5cb5b1461011c578063a035b1fe1461013a578063f2fde38b1461015857610088565b8063045d03891461008d5780631befa6db146100a957806347e7ef24146100da578063715018a6146100f6575b600080fd5b6100a760048036038101906100a29190610e98565b610174565b005b6100c360048036038101906100be9190610e98565b6105b1565b6040516100d1929190611115565b60405180910390f35b6100f460048036038101906100ef9190610e98565b610800565b005b6100fe610ac7565b005b61011a60048036038101906101159190610ed4565b610b4f565b005b610124610bd5565b6040516101319190611071565b60405180910390f35b610142610bfe565b60405161014f919061121e565b60405180910390f35b610172600480360381019061016d9190610e46565b610c04565b005b600081116101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae9061119e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158061026257508173ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b6102a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102989061115e565b60405180910390fd5b808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102dd92919061108c565b60206040518083038186803b1580156102f557600080fd5b505afa158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d9190610efd565b101561036e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103659061117e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016103ab939291906110b5565b602060405180830381600087803b1580156103c557600080fd5b505af11580156103d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fd9190610e6f565b5060008061040b84846105b1565b91509150808273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104499190611071565b60206040518083038186803b15801561046157600080fd5b505afa158015610475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104999190610efd565b10156104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d1906111be565b60405180910390fd5b6000811161051d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105149061119e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105589291906110ec565b602060405180830381600087803b15801561057257600080fd5b505af1158015610586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105aa9190610e6f565b5050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106d857600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506003548473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561067857600080fd5b505afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b09190610f26565b600a6106bc91906112ce565b846106c791906113ec565b6106d1919061124a565b90506107f9565b8373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156107f857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561079957600080fd5b505afa1580156107ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d19190610f26565b600a6107dd91906112ce565b600354846107eb91906113ec565b6107f5919061124a565b90505b5b9250929050565b610808610cfc565b73ffffffffffffffffffffffffffffffffffffffff16610826610bd5565b73ffffffffffffffffffffffffffffffffffffffff161461087c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610873906111de565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158061092757508173ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b610966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095d906111fe565b60405180910390fd5b808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016109a292919061108c565b60206040518083038186803b1580156109ba57600080fd5b505afa1580156109ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f29190610efd565b1015610a33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2a9061117e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610a70939291906110b5565b602060405180830381600087803b158015610a8a57600080fd5b505af1158015610a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac29190610e6f565b505050565b610acf610cfc565b73ffffffffffffffffffffffffffffffffffffffff16610aed610bd5565b73ffffffffffffffffffffffffffffffffffffffff1614610b43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3a906111de565b60405180910390fd5b610b4d6000610d04565b565b610b57610cfc565b73ffffffffffffffffffffffffffffffffffffffff16610b75610bd5565b73ffffffffffffffffffffffffffffffffffffffff1614610bcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc2906111de565b60405180910390fd5b8060038190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b610c0c610cfc565b73ffffffffffffffffffffffffffffffffffffffff16610c2a610bd5565b73ffffffffffffffffffffffffffffffffffffffff1614610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c77906111de565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce79061113e565b60405180910390fd5b610cf981610d04565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610dd781611681565b92915050565b600081519050610dec81611698565b92915050565b600081359050610e01816116af565b92915050565b600081359050610e16816116c6565b92915050565b600081519050610e2b816116c6565b92915050565b600081519050610e40816116dd565b92915050565b600060208284031215610e5857600080fd5b6000610e6684828501610dc8565b91505092915050565b600060208284031215610e8157600080fd5b6000610e8f84828501610ddd565b91505092915050565b60008060408385031215610eab57600080fd5b6000610eb985828601610df2565b9250506020610eca85828601610e07565b9150509250929050565b600060208284031215610ee657600080fd5b6000610ef484828501610e07565b91505092915050565b600060208284031215610f0f57600080fd5b6000610f1d84828501610e1c565b91505092915050565b600060208284031215610f3857600080fd5b6000610f4684828501610e31565b91505092915050565b610f5881611446565b82525050565b610f67816114ad565b82525050565b6000610f7a602683611239565b9150610f858261153c565b604082019050919050565b6000610f9d601583611239565b9150610fa88261158b565b602082019050919050565b6000610fc0601883611239565b9150610fcb826115b4565b602082019050919050565b6000610fe3601483611239565b9150610fee826115dd565b602082019050919050565b6000611006601683611239565b915061101182611606565b602082019050919050565b6000611029602083611239565b91506110348261162f565b602082019050919050565b600061104c601483611239565b915061105782611658565b602082019050919050565b61106b81611496565b82525050565b60006020820190506110866000830184610f4f565b92915050565b60006040820190506110a16000830185610f4f565b6110ae6020830184610f4f565b9392505050565b60006060820190506110ca6000830186610f4f565b6110d76020830185610f4f565b6110e46040830184611062565b949350505050565b60006040820190506111016000830185610f4f565b61110e6020830184611062565b9392505050565b600060408201905061112a6000830185610f5e565b6111376020830184611062565b9392505050565b6000602082019050818103600083015261115781610f6d565b9050919050565b6000602082019050818103600083015261117781610f90565b9050919050565b6000602082019050818103600083015261119781610fb3565b9050919050565b600060208201905081810360008301526111b781610fd6565b9050919050565b600060208201905081810360008301526111d781610ff9565b9050919050565b600060208201905081810360008301526111f78161101c565b9050919050565b600060208201905081810360008301526112178161103f565b9050919050565b60006020820190506112336000830184611062565b92915050565b600082825260208201905092915050565b600061125582611496565b915061126083611496565b9250826112705761126f611500565b5b828204905092915050565b6000808291508390505b60018511156112c5578086048111156112a1576112a06114d1565b5b60018516156112b05780820291505b80810290506112be8561152f565b9450611285565b94509492505050565b60006112d982611496565b91506112e4836114a0565b92506113117fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611319565b905092915050565b60008261132957600190506113e5565b8161133757600090506113e5565b816001811461134d576002811461135757611386565b60019150506113e5565b60ff841115611369576113686114d1565b5b8360020a9150848211156113805761137f6114d1565b5b506113e5565b5060208310610133831016604e8410600b84101617156113bb5782820a9050838111156113b6576113b56114d1565b5b6113e5565b6113c8848484600161127b565b925090508184048111156113df576113de6114d1565b5b81810290505b9392505050565b60006113f782611496565b915061140283611496565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561143b5761143a6114d1565b5b828202905092915050565b600061145182611476565b9050919050565b60008115159050919050565b600061146f82611446565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006114b8826114bf565b9050919050565b60006114ca82611476565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45786368616e6765206e6f7420616c6c6f776564210000000000000000000000600082015250565b7f455243323020616c6c6f77616e636520746f6f206c6f77210000000000000000600082015250565b7f5377617020616d6f756e7420746f6f206c6f7721000000000000000000000000600082015250565b7f45524332302062616c616e636520746f6f206c6f772100000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4465706f736974206e6f7420616c6c6f77656421000000000000000000000000600082015250565b61168a81611446565b811461169557600080fd5b50565b6116a181611458565b81146116ac57600080fd5b50565b6116b881611464565b81146116c357600080fd5b50565b6116cf81611496565b81146116da57600080fd5b50565b6116e6816114a0565b81146116f157600080fd5b5056fea264697066735822122060fcac0ec7d90569271e78052a830f443a8af3a6ad05b7fcb167f2687ae5822264736f6c63430008010033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1696:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:93:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "93:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "108:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "102:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "102:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "164:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC20_$692",
                      "nodeType": "YulIdentifier",
                      "src": "124:39:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "124:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "124:46:9"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC20_$692_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "61:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "69:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "77:5:9",
                "type": ""
              }
            ],
            "src": "7:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "245:80:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "255:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "270:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "264:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "255:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "313:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "286:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "286:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "286:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "223:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "231:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "239:5:9",
                "type": ""
              }
            ],
            "src": "182:143:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "468:511:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "514:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "523:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "516:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "516:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "516:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "489:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "498:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "485:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "485:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "510:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "478:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "540:141:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "555:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "569:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "559:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "584:87:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "643:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "654:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "639:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "639:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "663:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20_$692_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "594:44:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "594:77:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "584:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "691:142:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "706:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "720:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "710:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "736:87:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "795:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "806:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "791:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "791:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "815:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20_$692_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "746:44:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "746:77:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "736:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "843:129:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "858:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "872:2:9",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "862:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "888:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "934:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "945:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "930:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "930:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "954:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "898:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "898:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "888:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$692t_contract$_ERC20_$692t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "422:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "433:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "445:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "453:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "461:6:9",
                "type": ""
              }
            ],
            "src": "331:648:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1030:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1040:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1069:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1051:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1040:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1012:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1022:7:9",
                "type": ""
              }
            ],
            "src": "985:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1145:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1155:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1184:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1166:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1166:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1155:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC20_$692",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1127:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1137:7:9",
                "type": ""
              }
            ],
            "src": "1087:109:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1272:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1279:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1268:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1268:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1257:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1229:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1239:7:9",
                "type": ""
              }
            ],
            "src": "1202:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1379:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1389:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1400:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1389:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1361:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1371:7:9",
                "type": ""
              }
            ],
            "src": "1334:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1473:92:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1543:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1552:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1555:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1545:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1545:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1545:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1496:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1534:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC20_$692",
                              "nodeType": "YulIdentifier",
                              "src": "1503:30:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1503:37:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1493:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1493:48:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1486:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1486:56:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1483:2:9"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC20_$692",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1466:5:9",
                "type": ""
              }
            ],
            "src": "1417:148:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1614:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1671:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1680:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1683:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1673:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1673:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1673:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1637:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1662:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1644:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1644:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1634:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1634:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1627:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1627:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1624:2:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1607:5:9",
                "type": ""
              }
            ],
            "src": "1571:122:9"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_ERC20_$692_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$692(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$692t_contract$_ERC20_$692t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$692_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_ERC20_$692_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$692(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_contract$_ERC20_$692(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$692(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:16963:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:9"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:9",
                "type": ""
              }
            ],
            "src": "7:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:9"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:9",
                "type": ""
              }
            ],
            "src": "152:137:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "360:100:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "370:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "392:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "379:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "379:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "370:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "448:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC20_$692",
                      "nodeType": "YulIdentifier",
                      "src": "408:39:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "408:46:9"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC20_$692",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "338:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "346:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "354:5:9",
                "type": ""
              }
            ],
            "src": "295:165:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "518:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "528:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "550:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "537:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "528:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "593:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "566:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "566:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "566:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "496:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "504:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "512:5:9",
                "type": ""
              }
            ],
            "src": "466:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "674:80:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "684:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "699:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "693:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "693:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "684:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "742:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "715:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "715:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "715:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "652:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "660:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "668:5:9",
                "type": ""
              }
            ],
            "src": "611:143:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "821:78:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "831:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "846:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "840:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "840:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "831:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "887:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "862:24:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "862:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "862:31:9"
                }
              ]
            },
            "name": "abi_decode_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "799:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "807:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "815:5:9",
                "type": ""
              }
            ],
            "src": "760:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "971:196:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1017:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1026:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1029:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1019:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1019:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1019:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "992:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1001:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "988:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "988:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1013:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "984:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "984:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "981:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1043:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1058:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1072:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1062:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1087:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1122:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1133:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1118:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1118:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1142:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1097:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1097:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1087:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "941:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "952:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "964:6:9",
                "type": ""
              }
            ],
            "src": "905:262:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:204:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1293:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1302:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1305:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1295:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1295:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1295:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1268:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1277:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1289:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1260:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1260:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1257:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1319:125:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1334:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1348:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1338:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1363:71:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1406:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1417:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1402:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1402:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1426:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1373:28:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1373:61:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1363:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1217:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1228:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1240:6:9",
                "type": ""
              }
            ],
            "src": "1173:278:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1553:337:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1599:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1608:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1611:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1601:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1601:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1601:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1574:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1583:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1570:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1570:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1595:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1566:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1566:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1563:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1625:130:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1640:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1654:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1644:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1669:76:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1717:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1728:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1713:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1713:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1737:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20_$692",
                          "nodeType": "YulIdentifier",
                          "src": "1679:33:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1679:66:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1669:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1765:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1780:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1794:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1784:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1810:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1845:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1856:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1841:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1841:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1865:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1820:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1820:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1810:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$692t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1515:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1526:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1538:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1546:6:9",
                "type": ""
              }
            ],
            "src": "1457:433:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1962:196:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2008:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2017:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2020:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2010:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2010:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2010:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1983:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1992:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1979:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1979:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2004:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1975:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1975:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1972:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2034:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2049:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2063:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2053:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2078:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2113:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2124:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2109:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2109:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2133:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2088:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2088:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2078:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1932:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1943:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1955:6:9",
                "type": ""
              }
            ],
            "src": "1896:262:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2241:207:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2287:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2296:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2299:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2289:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2289:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2289:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2262:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2271:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2258:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2258:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2283:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2254:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2254:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2251:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2313:128:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2328:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2342:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2332:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2357:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2403:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2414:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2399:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2399:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2423:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2367:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2367:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2357:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2211:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2222:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2234:6:9",
                "type": ""
              }
            ],
            "src": "2164:284:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2529:205:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2575:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2584:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2587:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2577:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2577:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2577:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2550:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2559:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2546:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2546:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2571:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2542:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2539:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2601:126:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2616:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2630:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2620:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2645:72:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2689:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2700:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2685:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2685:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2709:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint8_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2655:29:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2655:62:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2645:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2499:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2510:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2522:6:9",
                "type": ""
              }
            ],
            "src": "2454:280:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2805:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2822:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2845:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2827:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2827:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2815:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2815:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2815:37:9"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2793:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2800:3:9",
                "type": ""
              }
            ],
            "src": "2740:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2942:79:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2959:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3008:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC20_$692_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2964:43:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2964:50:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2952:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2952:63:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2952:63:9"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC20_$692_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2930:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2937:3:9",
                "type": ""
              }
            ],
            "src": "2864:157:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3173:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3183:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3249:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3254:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3190:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3190:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3183:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3355:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "3266:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3266:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3266:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3368:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3379:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3384:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3375:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3375:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3368:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3161:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3169:3:9",
                "type": ""
              }
            ],
            "src": "3027:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3545:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3555:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3621:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3626:2:9",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3562:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3562:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3555:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3727:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c",
                      "nodeType": "YulIdentifier",
                      "src": "3638:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3638:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3638:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3740:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3751:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3756:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3747:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3747:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3740:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3533:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3541:3:9",
                "type": ""
              }
            ],
            "src": "3399:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3917:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3927:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3993:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3998:2:9",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3934:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3934:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3927:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4099:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                      "nodeType": "YulIdentifier",
                      "src": "4010:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4010:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4010:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4112:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4123:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4128:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4119:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4119:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4112:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3905:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3913:3:9",
                "type": ""
              }
            ],
            "src": "3771:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4289:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4299:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4365:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4370:2:9",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4306:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4306:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4299:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4471:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                      "nodeType": "YulIdentifier",
                      "src": "4382:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4382:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4382:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4484:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4495:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4500:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4491:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4491:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4484:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4277:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4285:3:9",
                "type": ""
              }
            ],
            "src": "4143:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4661:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4671:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4737:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4742:2:9",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4678:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4678:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4671:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4843:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5",
                      "nodeType": "YulIdentifier",
                      "src": "4754:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4754:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4754:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4856:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4867:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4872:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4863:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4863:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4856:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4649:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4657:3:9",
                "type": ""
              }
            ],
            "src": "4515:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5033:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5043:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5109:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5114:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5050:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5050:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5043:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5215:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "5126:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5126:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5126:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5228:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5239:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5244:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5235:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5235:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5228:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5021:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5029:3:9",
                "type": ""
              }
            ],
            "src": "4887:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5405:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5415:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5481:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5486:2:9",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5422:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5422:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5415:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5587:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8",
                      "nodeType": "YulIdentifier",
                      "src": "5498:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5498:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5498:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5600:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5611:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5616:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5607:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5607:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5600:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5393:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5401:3:9",
                "type": ""
              }
            ],
            "src": "5259:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5696:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5713:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5736:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5718:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5718:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5706:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5706:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5706:37:9"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5684:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5691:3:9",
                "type": ""
              }
            ],
            "src": "5631:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5853:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5863:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5875:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5886:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5871:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5871:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5863:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5943:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5956:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5967:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5952:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5952:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5899:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5899:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5899:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5825:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5837:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5848:4:9",
                "type": ""
              }
            ],
            "src": "5755:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6109:206:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6119:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6131:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6142:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6127:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6127:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6119:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6199:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6212:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6223:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6208:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6208:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6155:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6155:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6155:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6280:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6293:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6304:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6289:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6289:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6236:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6236:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6236:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6073:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6085:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6093:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6104:4:9",
                "type": ""
              }
            ],
            "src": "5983:332:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6475:288:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6485:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6497:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6508:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6493:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6493:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6485:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6565:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6578:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6589:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6574:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6574:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6521:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6521:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6521:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6646:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6659:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6670:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6655:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6655:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6602:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6602:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6602:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6728:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6741:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6752:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6737:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6737:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6684:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6684:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6684:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6431:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6443:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6451:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6459:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6470:4:9",
                "type": ""
              }
            ],
            "src": "6321:442:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6895:206:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6905:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6917:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6928:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6913:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6913:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6905:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6985:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6998:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7009:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6994:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6994:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6941:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6941:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6941:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7066:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7079:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7090:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7075:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7075:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7022:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7022:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7022:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6859:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6871:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6879:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6890:4:9",
                "type": ""
              }
            ],
            "src": "6769:332:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7246:219:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7256:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7268:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7279:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7264:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7264:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7256:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7349:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7362:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7373:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7358:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7358:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC20_$692_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7292:56:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7292:84:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7292:84:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7430:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7443:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7454:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7439:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7439:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7386:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7386:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7386:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$692_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7210:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7222:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7230:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7241:4:9",
                "type": ""
              }
            ],
            "src": "7107:358:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7642:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7652:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7664:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7675:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7660:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7660:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7652:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7699:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7710:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7695:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7695:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7718:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7724:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7714:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7714:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7688:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7688:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7688:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7744:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7878:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7752:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7752:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7744:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7622:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7637:4:9",
                "type": ""
              }
            ],
            "src": "7471:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8067:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8077:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8089:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8100:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8085:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8085:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8077:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8124:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8135:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8120:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8120:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8143:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8149:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8139:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8139:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8113:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8113:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8113:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8169:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8303:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8177:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8177:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8169:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8047:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8062:4:9",
                "type": ""
              }
            ],
            "src": "7896:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8492:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8502:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8514:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8525:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8510:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8510:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8502:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8549:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8560:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8545:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8545:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8568:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8574:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8564:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8564:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8538:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8538:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8538:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8594:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8728:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8602:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8602:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8594:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8472:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8487:4:9",
                "type": ""
              }
            ],
            "src": "8321:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8917:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8927:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8939:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8950:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8935:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8935:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8927:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8974:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8985:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8970:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8970:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8993:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8999:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8989:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8989:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8963:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8963:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8963:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9019:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9153:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9027:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9027:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9019:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8897:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8912:4:9",
                "type": ""
              }
            ],
            "src": "8746:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9342:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9352:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9364:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9375:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9360:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9360:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9352:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9399:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9410:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9395:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9395:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9418:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9424:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9414:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9414:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9388:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9388:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9388:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9444:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9578:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9452:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9452:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9444:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9322:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9337:4:9",
                "type": ""
              }
            ],
            "src": "9171:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9767:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9777:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9789:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9800:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9785:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9785:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9777:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9824:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9835:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9820:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9820:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9843:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9849:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9839:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9839:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9813:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9813:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9813:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9869:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10003:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9877:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9877:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9869:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9747:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9762:4:9",
                "type": ""
              }
            ],
            "src": "9596:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10192:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10202:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10214:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10225:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10210:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10210:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10202:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10249:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10260:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10245:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10245:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10268:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10274:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10264:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10264:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10238:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10238:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10238:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10294:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10428:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10302:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10302:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10294:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10172:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10187:4:9",
                "type": ""
              }
            ],
            "src": "10021:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10544:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10554:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10566:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10577:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10562:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10562:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10554:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10634:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10647:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10658:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10643:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10643:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10590:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10590:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10590:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10516:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10528:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10539:4:9",
                "type": ""
              }
            ],
            "src": "10446:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10770:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10787:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10792:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10780:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10780:19:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10780:19:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10808:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10827:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10832:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10823:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10823:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10808:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10742:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10747:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10758:11:9",
                "type": ""
              }
            ],
            "src": "10674:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10891:143:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10901:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10924:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10906:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10906:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10901:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10935:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10958:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10940:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10940:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10935:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10982:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "10984:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10984:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10984:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10979:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10972:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10972:9:9"
                  },
                  "nodeType": "YulIf",
                  "src": "10969:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11014:14:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11023:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11026:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "11019:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11019:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "11014:1:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10880:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10883:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "10889:1:9",
                "type": ""
              }
            ],
            "src": "10849:185:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11113:775:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11123:15:9",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "11132:6:9"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "11123:5:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11147:14:9",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "11156:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "11147:4:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11205:677:9",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11293:22:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "11295:16:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11295:18:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11295:18:9"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11271:4:9"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "11281:3:9"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "11286:4:9"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "11277:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11277:14:9"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "11268:2:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11268:24:9"
                        },
                        "nodeType": "YulIf",
                        "src": "11265:2:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11360:419:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11740:25:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "11753:5:9"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "11760:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "11749:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11749:16:9"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "11740:5:9"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "11335:8:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11345:1:9",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "11331:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11331:16:9"
                        },
                        "nodeType": "YulIf",
                        "src": "11328:2:9"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11792:23:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11804:4:9"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11810:4:9"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "11800:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11800:15:9"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "11792:4:9"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11828:44:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "11863:8:9"
                            }
                          ],
                          "functionName": {
                            "name": "shift_right_1_unsigned",
                            "nodeType": "YulIdentifier",
                            "src": "11840:22:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11840:32:9"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "11828:8:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11181:8:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11191:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11178:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11178:15:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11194:2:9",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11174:3:9",
                    "statements": []
                  },
                  "src": "11170:712:9"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "11068:6:9",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "11076:5:9",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "11083:8:9",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "11093:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "11101:5:9",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "11108:4:9",
                "type": ""
              }
            ],
            "src": "11040:848:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11958:217:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11968:31:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "11994:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11976:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11976:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "11968:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12008:37:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "12036:8:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "12020:15:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12020:25:9"
                  },
                  "variableNames": [
                    {
                      "name": "exponent",
                      "nodeType": "YulIdentifier",
                      "src": "12008:8:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12055:113:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12085:4:9"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "12091:8:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12101:66:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "12064:20:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12064:104:9"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "12055:5:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "11933:4:9",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "11939:8:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "11952:5:9",
                "type": ""
              }
            ],
            "src": "11894:281:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12241:1013:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12436:20:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12438:10:9",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12447:1:9",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "12438:5:9"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "12449:5:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "12426:8:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12419:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12419:16:9"
                  },
                  "nodeType": "YulIf",
                  "src": "12416:2:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12481:20:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12483:10:9",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12492:1:9",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "12483:5:9"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "12494:5:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12475:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12468:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12468:12:9"
                  },
                  "nodeType": "YulIf",
                  "src": "12465:2:9"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12611:20:9",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "12613:10:9",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12622:1:9",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "12613:5:9"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "12624:5:9"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12604:27:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12609:1:9",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12655:176:9",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "12690:22:9",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "12692:16:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12692:18:9"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12692:18:9"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "12675:8:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12685:3:9",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "12672:2:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12672:17:9"
                            },
                            "nodeType": "YulIf",
                            "src": "12669:2:9"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "12725:25:9",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12738:1:9",
                                  "type": "",
                                  "value": "2"
                                },
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "12741:8:9"
                                }
                              ],
                              "functionName": {
                                "name": "exp",
                                "nodeType": "YulIdentifier",
                                "src": "12734:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12734:16:9"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "12725:5:9"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "12781:22:9",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "12783:16:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12783:18:9"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12783:18:9"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "12769:5:9"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "12776:3:9"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "12766:2:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12766:14:9"
                            },
                            "nodeType": "YulIf",
                            "src": "12763:2:9"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "12816:5:9"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12640:191:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12645:1:9",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "12561:4:9"
                  },
                  "nodeType": "YulSwitch",
                  "src": "12554:277:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12963:123:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12977:28:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "12990:4:9"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "12996:8:9"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "12986:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12986:19:9"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "12977:5:9"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13036:22:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "13038:16:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13038:18:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13038:18:9"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "13024:5:9"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "13031:3:9"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "13021:2:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13021:14:9"
                        },
                        "nodeType": "YulIf",
                        "src": "13018:2:9"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "13071:5:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "12866:4:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12872:2:9",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12863:2:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12863:12:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "12880:8:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12890:2:9",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12877:2:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12877:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12859:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12859:35:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "12915:4:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12921:3:9",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12912:2:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12912:13:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "12930:8:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12940:2:9",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12927:2:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12927:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12908:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12908:36:9"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "12843:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12843:111:9"
                  },
                  "nodeType": "YulIf",
                  "src": "12840:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13096:57:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13130:1:9",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "13133:4:9"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "13139:8:9"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "13149:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "13111:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13111:42:9"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "13096:5:9"
                    },
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "13103:4:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13192:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13194:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13194:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13194:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "13169:5:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "13180:3:9"
                          },
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "13185:4:9"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "13176:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13176:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13166:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13166:25:9"
                  },
                  "nodeType": "YulIf",
                  "src": "13163:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13223:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "13236:5:9"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "13243:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "13232:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13232:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "13223:5:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "12211:4:9",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "12217:8:9",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "12227:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "12235:5:9",
                "type": ""
              }
            ],
            "src": "12181:1073:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13308:300:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13318:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13341:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13323:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13323:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13318:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13352:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13375:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "13357:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13357:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13352:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13550:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13552:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13552:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13552:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13462:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "13455:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13455:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13448:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13448:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13470:1:9"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13477:66:9",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13545:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "13473:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13473:74:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "13467:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13467:81:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13444:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13444:105:9"
                  },
                  "nodeType": "YulIf",
                  "src": "13441:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13582:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13597:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13600:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "13593:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13593:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "13582:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13291:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13294:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "13300:7:9",
                "type": ""
              }
            ],
            "src": "13260:348:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13659:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13669:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13698:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "13680:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13680:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13669:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13641:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13651:7:9",
                "type": ""
              }
            ],
            "src": "13614:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13758:48:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13768:32:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13793:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13786:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13786:13:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13779:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13779:21:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13768:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13740:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13750:7:9",
                "type": ""
              }
            ],
            "src": "13716:90:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13870:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13880:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13909:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "13891:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13891:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13880:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC20_$692",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13852:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13862:7:9",
                "type": ""
              }
            ],
            "src": "13812:109:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13972:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13982:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13997:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14004:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13993:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13993:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13982:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13954:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13964:7:9",
                "type": ""
              }
            ],
            "src": "13927:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14104:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14114:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "14125:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14114:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14086:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14096:7:9",
                "type": ""
              }
            ],
            "src": "14059:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14185:43:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14195:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14210:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14217:4:9",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14206:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14206:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14195:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14167:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14177:7:9",
                "type": ""
              }
            ],
            "src": "14142:86:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14307:79:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14317:63:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14374:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ERC20_$692_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "14330:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14330:50:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "14317:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$692_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14287:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "14297:9:9",
                "type": ""
              }
            ],
            "src": "14234:152:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14465:53:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14475:37:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14506:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "14488:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14488:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "14475:9:9"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$692_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14445:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "14455:9:9",
                "type": ""
              }
            ],
            "src": "14392:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14552:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14569:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14572:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14562:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14562:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14562:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14666:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14669:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14659:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14659:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14659:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14690:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14693:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14683:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14683:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14683:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "14524:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14738:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14755:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14758:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14748:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14748:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14748:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14852:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14855:4:9",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14845:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14845:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14845:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14876:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14879:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14869:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14869:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14869:15:9"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "14710:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14947:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14957:34:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14982:1:9",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14985:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "14978:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14978:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "14957:8:9"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_1_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14928:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "14938:8:9",
                "type": ""
              }
            ],
            "src": "14896:102:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15110:119:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15132:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15140:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15128:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15128:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15144:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15121:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15121:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15121:58:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15200:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15208:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15196:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15196:15:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15213:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15189:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15189:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15189:33:9"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15102:6:9",
                "type": ""
              }
            ],
            "src": "15004:225:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15341:65:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15363:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15371:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15359:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15359:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15375:23:9",
                        "type": "",
                        "value": "Exchange not allowed!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15352:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15352:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15352:47:9"
                }
              ]
            },
            "name": "store_literal_in_memory_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15333:6:9",
                "type": ""
              }
            ],
            "src": "15235:171:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15518:68:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15540:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15548:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15536:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15536:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15552:26:9",
                        "type": "",
                        "value": "ERC20 allowance too low!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15529:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15529:50:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15529:50:9"
                }
              ]
            },
            "name": "store_literal_in_memory_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15510:6:9",
                "type": ""
              }
            ],
            "src": "15412:174:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15698:64:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15720:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15728:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15716:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15716:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15732:22:9",
                        "type": "",
                        "value": "Swap amount too low!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15709:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15709:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15709:46:9"
                }
              ]
            },
            "name": "store_literal_in_memory_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15690:6:9",
                "type": ""
              }
            ],
            "src": "15592:170:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15874:66:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15896:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15904:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15892:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15892:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15908:24:9",
                        "type": "",
                        "value": "ERC20 balance too low!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15885:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15885:48:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15885:48:9"
                }
              ]
            },
            "name": "store_literal_in_memory_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15866:6:9",
                "type": ""
              }
            ],
            "src": "15768:172:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16052:76:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16074:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16082:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16070:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16070:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16086:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16063:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16063:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16063:58:9"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16044:6:9",
                "type": ""
              }
            ],
            "src": "15946:182:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16240:64:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16262:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16270:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16258:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16258:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16274:22:9",
                        "type": "",
                        "value": "Deposit not allowed!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16251:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16251:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16251:46:9"
                }
              ]
            },
            "name": "store_literal_in_memory_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16232:6:9",
                "type": ""
              }
            ],
            "src": "16134:170:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16353:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16410:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16419:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16422:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16412:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16412:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16412:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16376:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16401:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "16383:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16383:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16373:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16373:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16366:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16366:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "16363:2:9"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16346:5:9",
                "type": ""
              }
            ],
            "src": "16310:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16478:76:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16532:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16541:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16544:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16534:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16534:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16534:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16501:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16523:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "16508:14:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16508:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16498:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16498:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16491:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16491:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "16488:2:9"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16471:5:9",
                "type": ""
              }
            ],
            "src": "16438:116:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16616:92:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16686:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16695:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16698:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16688:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16688:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16688:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16639:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16677:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC20_$692",
                              "nodeType": "YulIdentifier",
                              "src": "16646:30:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16646:37:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16636:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16636:48:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16629:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16629:56:9"
                  },
                  "nodeType": "YulIf",
                  "src": "16626:2:9"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC20_$692",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16609:5:9",
                "type": ""
              }
            ],
            "src": "16560:148:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16757:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16814:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16823:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16826:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16816:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16816:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16816:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16780:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16805:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "16787:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16787:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16777:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16777:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16770:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16770:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "16767:2:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16750:5:9",
                "type": ""
              }
            ],
            "src": "16714:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16883:77:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16938:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16947:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16950:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16940:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16940:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16940:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16906:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16929:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "16913:15:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16913:22:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16903:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16903:33:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16896:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16896:41:9"
                  },
                  "nodeType": "YulIf",
                  "src": "16893:2:9"
                }
              ]
            },
            "name": "validator_revert_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16876:5:9",
                "type": ""
              }
            ],
            "src": "16842:118:9"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_ERC20_$692(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ERC20_$692(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$692t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$692(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ERC20_$692_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$692_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$692_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_ERC20_$692_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_ERC20_$692(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function convert_t_contract$_ERC20_$692_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ERC20_$692_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$692_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exchange not allowed!\")\n\n    }\n\n    function store_literal_in_memory_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20 allowance too low!\")\n\n    }\n\n    function store_literal_in_memory_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Swap amount too low!\")\n\n    }\n\n    function store_literal_in_memory_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20 balance too low!\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit not allowed!\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ERC20_$692(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$692(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "199:2004:8:-:0;;;316:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;396:7:8;387:6;;:16;;;;;;;;;;;;;;;;;;423:7;414:6;;:16;;;;;;;;;;;;;;;;;;449:6;441:5;:14;;;;316:147;;;199:2004;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;7:169:9:-;;108:6;102:13;93:22;;124:46;164:5;124:46;:::i;:::-;83:93;;;;:::o;182:143::-;;270:6;264:13;255:22;;286:33;313:5;286:33;:::i;:::-;245:80;;;;:::o;331:648::-;;;;510:2;498:9;489:7;485:23;481:32;478:2;;;526:1;523;516:12;478:2;569:1;594:77;663:7;654:6;643:9;639:22;594:77;:::i;:::-;584:87;;540:141;720:2;746:77;815:7;806:6;795:9;791:22;746:77;:::i;:::-;736:87;;691:142;872:2;898:64;954:7;945:6;934:9;930:22;898:64;:::i;:::-;888:74;;843:129;468:511;;;;;:::o;985:96::-;;1051:24;1069:5;1051:24;:::i;:::-;1040:35;;1030:51;;;:::o;1087:109::-;;1166:24;1184:5;1166:24;:::i;:::-;1155:35;;1145:51;;;:::o;1202:126::-;;1279:42;1272:5;1268:54;1257:65;;1247:81;;;:::o;1334:77::-;;1400:5;1389:16;;1379:32;;;:::o;1417:148::-;1503:37;1534:5;1503:37;:::i;:::-;1496:5;1493:48;1483:2;;1555:1;1552;1545:12;1483:2;1473:92;:::o;1571:122::-;1644:24;1662:5;1644:24;:::i;:::-;1637:5;1634:35;1624:2;;1683:1;1680;1673:12;1624:2;1614:79;:::o;199:2004:8:-;;;;;;;",
  "deployedSourceMap": "199:2004:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;935:703;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1646:554;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;568:359;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;471:89:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;290:17:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;935:703:8;1021:1;1012:6;:10;1004:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;1093:6;1066:34;;1074:6;;;;;;;;;;;1066:34;;;;:72;;;;1131:6;1104:34;;1112:6;;;;;;;;;;;1104:34;;;;1066:72;1058:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1230:6;1183;:16;;;1200:10;1220:4;1183:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1175:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;1276:6;:19;;;1296:10;1316:4;1323:6;1276:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1344:17;1363;1384:29;1398:6;1406;1384:13;:29::i;:::-;1343:70;;;;1472:12;1432:11;:21;;;1462:4;1432:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;1424:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1545:1;1530:12;:16;1522:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1584:11;:20;;;1605:10;1617:12;1584:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;935:703;;;;:::o;1646:554::-;1721:17;1740;1805:6;1778:34;;1786:6;;;;;;;;;;;1778:34;;;1775:334;;;1843:6;;;;;;;;;;;1829:20;;1917:5;;1897:6;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1893:2;:21;;;;:::i;:::-;1879:11;:35;;;;:::i;:::-;:43;;;;:::i;:::-;1864:58;;1775:334;;;1980:6;1953:34;;1961:6;;;;;;;;;;;1953:34;;;1949:160;;;2018:6;;;;;;;;;;;2004:20;;2080:6;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2076:2;:21;;;;:::i;:::-;2068:5;;2054:11;:19;;;;:::i;:::-;:43;;;;:::i;:::-;2039:58;;1949:160;1775:334;1646:554;;;;;:::o;568:359::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;681:6:8::1;654:34;;662:6;;;;;;;;;;;654:34;;;;:72;;;;719:6;692:34;;700:6;;;;;;;;;;;692:34;;;;654:72;646:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;817:6;770;:16;;;787:10;807:4;770:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;762:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;865:6;:19;;;885:10;905:4;912:6;865:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;568:359:::0;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;471:89:8:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;546:6:8::1;538:5;:14;;;;471:89:::0;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;290:17:8:-;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;7:139:9:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:165::-;;392:6;379:20;370:29;;408:46;448:5;408:46;:::i;:::-;360:100;;;;:::o;466:139::-;;550:6;537:20;528:29;;566:33;593:5;566:33;:::i;:::-;518:87;;;;:::o;611:143::-;;699:6;693:13;684:22;;715:33;742:5;715:33;:::i;:::-;674:80;;;;:::o;760:139::-;;846:6;840:13;831:22;;862:31;887:5;862:31;:::i;:::-;821:78;;;;:::o;905:262::-;;1013:2;1001:9;992:7;988:23;984:32;981:2;;;1029:1;1026;1019:12;981:2;1072:1;1097:53;1142:7;1133:6;1122:9;1118:22;1097:53;:::i;:::-;1087:63;;1043:117;971:196;;;;:::o;1173:278::-;;1289:2;1277:9;1268:7;1264:23;1260:32;1257:2;;;1305:1;1302;1295:12;1257:2;1348:1;1373:61;1426:7;1417:6;1406:9;1402:22;1373:61;:::i;:::-;1363:71;;1319:125;1247:204;;;;:::o;1457:433::-;;;1595:2;1583:9;1574:7;1570:23;1566:32;1563:2;;;1611:1;1608;1601:12;1563:2;1654:1;1679:66;1737:7;1728:6;1717:9;1713:22;1679:66;:::i;:::-;1669:76;;1625:130;1794:2;1820:53;1865:7;1856:6;1845:9;1841:22;1820:53;:::i;:::-;1810:63;;1765:118;1553:337;;;;;:::o;1896:262::-;;2004:2;1992:9;1983:7;1979:23;1975:32;1972:2;;;2020:1;2017;2010:12;1972:2;2063:1;2088:53;2133:7;2124:6;2113:9;2109:22;2088:53;:::i;:::-;2078:63;;2034:117;1962:196;;;;:::o;2164:284::-;;2283:2;2271:9;2262:7;2258:23;2254:32;2251:2;;;2299:1;2296;2289:12;2251:2;2342:1;2367:64;2423:7;2414:6;2403:9;2399:22;2367:64;:::i;:::-;2357:74;;2313:128;2241:207;;;;:::o;2454:280::-;;2571:2;2559:9;2550:7;2546:23;2542:32;2539:2;;;2587:1;2584;2577:12;2539:2;2630:1;2655:62;2709:7;2700:6;2689:9;2685:22;2655:62;:::i;:::-;2645:72;;2601:126;2529:205;;;;:::o;2740:118::-;2827:24;2845:5;2827:24;:::i;:::-;2822:3;2815:37;2805:53;;:::o;2864:157::-;2964:50;3008:5;2964:50;:::i;:::-;2959:3;2952:63;2942:79;;:::o;3027:366::-;;3190:67;3254:2;3249:3;3190:67;:::i;:::-;3183:74;;3266:93;3355:3;3266:93;:::i;:::-;3384:2;3379:3;3375:12;3368:19;;3173:220;;;:::o;3399:366::-;;3562:67;3626:2;3621:3;3562:67;:::i;:::-;3555:74;;3638:93;3727:3;3638:93;:::i;:::-;3756:2;3751:3;3747:12;3740:19;;3545:220;;;:::o;3771:366::-;;3934:67;3998:2;3993:3;3934:67;:::i;:::-;3927:74;;4010:93;4099:3;4010:93;:::i;:::-;4128:2;4123:3;4119:12;4112:19;;3917:220;;;:::o;4143:366::-;;4306:67;4370:2;4365:3;4306:67;:::i;:::-;4299:74;;4382:93;4471:3;4382:93;:::i;:::-;4500:2;4495:3;4491:12;4484:19;;4289:220;;;:::o;4515:366::-;;4678:67;4742:2;4737:3;4678:67;:::i;:::-;4671:74;;4754:93;4843:3;4754:93;:::i;:::-;4872:2;4867:3;4863:12;4856:19;;4661:220;;;:::o;4887:366::-;;5050:67;5114:2;5109:3;5050:67;:::i;:::-;5043:74;;5126:93;5215:3;5126:93;:::i;:::-;5244:2;5239:3;5235:12;5228:19;;5033:220;;;:::o;5259:366::-;;5422:67;5486:2;5481:3;5422:67;:::i;:::-;5415:74;;5498:93;5587:3;5498:93;:::i;:::-;5616:2;5611:3;5607:12;5600:19;;5405:220;;;:::o;5631:118::-;5718:24;5736:5;5718:24;:::i;:::-;5713:3;5706:37;5696:53;;:::o;5755:222::-;;5886:2;5875:9;5871:18;5863:26;;5899:71;5967:1;5956:9;5952:17;5943:6;5899:71;:::i;:::-;5853:124;;;;:::o;5983:332::-;;6142:2;6131:9;6127:18;6119:26;;6155:71;6223:1;6212:9;6208:17;6199:6;6155:71;:::i;:::-;6236:72;6304:2;6293:9;6289:18;6280:6;6236:72;:::i;:::-;6109:206;;;;;:::o;6321:442::-;;6508:2;6497:9;6493:18;6485:26;;6521:71;6589:1;6578:9;6574:17;6565:6;6521:71;:::i;:::-;6602:72;6670:2;6659:9;6655:18;6646:6;6602:72;:::i;:::-;6684;6752:2;6741:9;6737:18;6728:6;6684:72;:::i;:::-;6475:288;;;;;;:::o;6769:332::-;;6928:2;6917:9;6913:18;6905:26;;6941:71;7009:1;6998:9;6994:17;6985:6;6941:71;:::i;:::-;7022:72;7090:2;7079:9;7075:18;7066:6;7022:72;:::i;:::-;6895:206;;;;;:::o;7107:358::-;;7279:2;7268:9;7264:18;7256:26;;7292:84;7373:1;7362:9;7358:17;7349:6;7292:84;:::i;:::-;7386:72;7454:2;7443:9;7439:18;7430:6;7386:72;:::i;:::-;7246:219;;;;;:::o;7471:419::-;;7675:2;7664:9;7660:18;7652:26;;7724:9;7718:4;7714:20;7710:1;7699:9;7695:17;7688:47;7752:131;7878:4;7752:131;:::i;:::-;7744:139;;7642:248;;;:::o;7896:419::-;;8100:2;8089:9;8085:18;8077:26;;8149:9;8143:4;8139:20;8135:1;8124:9;8120:17;8113:47;8177:131;8303:4;8177:131;:::i;:::-;8169:139;;8067:248;;;:::o;8321:419::-;;8525:2;8514:9;8510:18;8502:26;;8574:9;8568:4;8564:20;8560:1;8549:9;8545:17;8538:47;8602:131;8728:4;8602:131;:::i;:::-;8594:139;;8492:248;;;:::o;8746:419::-;;8950:2;8939:9;8935:18;8927:26;;8999:9;8993:4;8989:20;8985:1;8974:9;8970:17;8963:47;9027:131;9153:4;9027:131;:::i;:::-;9019:139;;8917:248;;;:::o;9171:419::-;;9375:2;9364:9;9360:18;9352:26;;9424:9;9418:4;9414:20;9410:1;9399:9;9395:17;9388:47;9452:131;9578:4;9452:131;:::i;:::-;9444:139;;9342:248;;;:::o;9596:419::-;;9800:2;9789:9;9785:18;9777:26;;9849:9;9843:4;9839:20;9835:1;9824:9;9820:17;9813:47;9877:131;10003:4;9877:131;:::i;:::-;9869:139;;9767:248;;;:::o;10021:419::-;;10225:2;10214:9;10210:18;10202:26;;10274:9;10268:4;10264:20;10260:1;10249:9;10245:17;10238:47;10302:131;10428:4;10302:131;:::i;:::-;10294:139;;10192:248;;;:::o;10446:222::-;;10577:2;10566:9;10562:18;10554:26;;10590:71;10658:1;10647:9;10643:17;10634:6;10590:71;:::i;:::-;10544:124;;;;:::o;10674:169::-;;10792:6;10787:3;10780:19;10832:4;10827:3;10823:14;10808:29;;10770:73;;;;:::o;10849:185::-;;10906:20;10924:1;10906:20;:::i;:::-;10901:25;;10940:20;10958:1;10940:20;:::i;:::-;10935:25;;10979:1;10969:2;;10984:18;;:::i;:::-;10969:2;11026:1;11023;11019:9;11014:14;;10891:143;;;;:::o;11040:848::-;;;11132:6;11123:15;;11156:5;11147:14;;11170:712;11191:1;11181:8;11178:15;11170:712;;;11286:4;11281:3;11277:14;11271:4;11268:24;11265:2;;;11295:18;;:::i;:::-;11265:2;11345:1;11335:8;11331:16;11328:2;;;11760:4;11753:5;11749:16;11740:25;;11328:2;11810:4;11804;11800:15;11792:23;;11840:32;11863:8;11840:32;:::i;:::-;11828:44;;11170:712;;;11113:775;;;;;;;:::o;11894:281::-;;11976:23;11994:4;11976:23;:::i;:::-;11968:31;;12020:25;12036:8;12020:25;:::i;:::-;12008:37;;12064:104;12101:66;12091:8;12085:4;12064:104;:::i;:::-;12055:113;;11958:217;;;;:::o;12181:1073::-;;12426:8;12416:2;;12447:1;12438:10;;12449:5;;12416:2;12475:4;12465:2;;12492:1;12483:10;;12494:5;;12465:2;12561:4;12609:1;12604:27;;;;12645:1;12640:191;;;;12554:277;;12604:27;12622:1;12613:10;;12624:5;;;12640:191;12685:3;12675:8;12672:17;12669:2;;;12692:18;;:::i;:::-;12669:2;12741:8;12738:1;12734:16;12725:25;;12776:3;12769:5;12766:14;12763:2;;;12783:18;;:::i;:::-;12763:2;12816:5;;;12554:277;;12940:2;12930:8;12927:16;12921:3;12915:4;12912:13;12908:36;12890:2;12880:8;12877:16;12872:2;12866:4;12863:12;12859:35;12843:111;12840:2;;;12996:8;12990:4;12986:19;12977:28;;13031:3;13024:5;13021:14;13018:2;;;13038:18;;:::i;:::-;13018:2;13071:5;;12840:2;13111:42;13149:3;13139:8;13133:4;13130:1;13111:42;:::i;:::-;13096:57;;;;13185:4;13180:3;13176:14;13169:5;13166:25;13163:2;;;13194:18;;:::i;:::-;13163:2;13243:4;13236:5;13232:16;13223:25;;12241:1013;;;;;;:::o;13260:348::-;;13323:20;13341:1;13323:20;:::i;:::-;13318:25;;13357:20;13375:1;13357:20;:::i;:::-;13352:25;;13545:1;13477:66;13473:74;13470:1;13467:81;13462:1;13455:9;13448:17;13444:105;13441:2;;;13552:18;;:::i;:::-;13441:2;13600:1;13597;13593:9;13582:20;;13308:300;;;;:::o;13614:96::-;;13680:24;13698:5;13680:24;:::i;:::-;13669:35;;13659:51;;;:::o;13716:90::-;;13793:5;13786:13;13779:21;13768:32;;13758:48;;;:::o;13812:109::-;;13891:24;13909:5;13891:24;:::i;:::-;13880:35;;13870:51;;;:::o;13927:126::-;;14004:42;13997:5;13993:54;13982:65;;13972:81;;;:::o;14059:77::-;;14125:5;14114:16;;14104:32;;;:::o;14142:86::-;;14217:4;14210:5;14206:16;14195:27;;14185:43;;;:::o;14234:152::-;;14330:50;14374:5;14330:50;:::i;:::-;14317:63;;14307:79;;;:::o;14392:126::-;;14488:24;14506:5;14488:24;:::i;:::-;14475:37;;14465:53;;;:::o;14524:180::-;14572:77;14569:1;14562:88;14669:4;14666:1;14659:15;14693:4;14690:1;14683:15;14710:180;14758:77;14755:1;14748:88;14855:4;14852:1;14845:15;14879:4;14876:1;14869:15;14896:102;;14985:5;14982:1;14978:13;14957:34;;14947:51;;;:::o;15004:225::-;15144:34;15140:1;15132:6;15128:14;15121:58;15213:8;15208:2;15200:6;15196:15;15189:33;15110:119;:::o;15235:171::-;15375:23;15371:1;15363:6;15359:14;15352:47;15341:65;:::o;15412:174::-;15552:26;15548:1;15540:6;15536:14;15529:50;15518:68;:::o;15592:170::-;15732:22;15728:1;15720:6;15716:14;15709:46;15698:64;:::o;15768:172::-;15908:24;15904:1;15896:6;15892:14;15885:48;15874:66;:::o;15946:182::-;16086:34;16082:1;16074:6;16070:14;16063:58;16052:76;:::o;16134:170::-;16274:22;16270:1;16262:6;16258:14;16251:46;16240:64;:::o;16310:122::-;16383:24;16401:5;16383:24;:::i;:::-;16376:5;16373:35;16363:2;;16422:1;16419;16412:12;16363:2;16353:79;:::o;16438:116::-;16508:21;16523:5;16508:21;:::i;:::-;16501:5;16498:32;16488:2;;16544:1;16541;16534:12;16488:2;16478:76;:::o;16560:148::-;16646:37;16677:5;16646:37;:::i;:::-;16639:5;16636:48;16626:2;;16698:1;16695;16688:12;16626:2;16616:92;:::o;16714:122::-;16787:24;16805:5;16787:24;:::i;:::-;16780:5;16777:35;16767:2;;16826:1;16823;16816:12;16767:2;16757:79;:::o;16842:118::-;16913:22;16929:5;16913:22;:::i;:::-;16906:5;16903:33;16893:2;;16950:1;16947;16940:12;16893:2;16883:77;:::o",
  "source": "// contracts/Days365.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.1;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TokenSwap is Ownable {\r\n    ERC20 private token1;\r\n    ERC20 private token2;\r\n    uint public price;\r\n\r\n    constructor(ERC20 _token1, ERC20 _token2, uint _price)\r\n    {\r\n        token1 = _token1;\r\n        token2 = _token2;\r\n        price = _price;\r\n    }\r\n\r\n    function updatePrice(uint _price) public onlyOwner\r\n    {\r\n        price = _price;\r\n    }\r\n\r\n    function deposit(ERC20 _token, uint amount) public onlyOwner \r\n    {\r\n        require(address(token1) != address(_token) || address(token2) != address(_token), \"Deposit not allowed!\");\r\n        require(_token.allowance(msg.sender, address(this)) >= amount, \"ERC20 allowance too low!\");\r\n\r\n        _token.transferFrom(msg.sender, address(this), amount);\r\n    }\r\n\r\n    function exchange(ERC20 _token, uint amount) public \r\n    {\r\n        require(amount > 0, \"Swap amount too low!\");\r\n        require(address(token1) != address(_token) || address(token2) != address(_token), \"Exchange not allowed!\");\r\n        require(_token.allowance(msg.sender, address(this)) >= amount, \"ERC20 allowance too low!\");\r\n        _token.transferFrom(msg.sender, address(this), amount);\r\n\r\n        (ERC20 tokenOutput, uint outputAmount) = getSwapAmount(_token, amount);\r\n        require(tokenOutput.balanceOf(address(this)) >= outputAmount, \"ERC20 balance too low!\");\r\n        require(outputAmount > 0, \"Swap amount too low!\");\r\n\r\n        tokenOutput.transfer(msg.sender, outputAmount);\r\n    }\r\n\r\n    function getSwapAmount(ERC20 _token, uint inputAmount) public view returns(ERC20 tokenOutput, uint outputAmount)\r\n    {\r\n        if(address(token1) == address(_token)) {\r\n            tokenOutput = token2;\r\n            outputAmount = inputAmount * 10**_token.decimals() / price;\r\n        }\r\n        else if (address(token2) == address(_token)) {\r\n            tokenOutput = token1;\r\n            outputAmount = inputAmount * price / 10**_token.decimals();\r\n        }\r\n\r\n        return (\r\n            tokenOutput,\r\n            outputAmount\r\n        );\r\n    }\r\n}",
  "sourcePath": "E:\\Users\\adria\\Ether\\TokenSwap\\contracts\\TokenSwap.sol",
  "ast": {
    "absolutePath": "project:/contracts/TokenSwap.sol",
    "exportedSymbols": {
      "Context": [
        817
      ],
      "ERC20": [
        692
      ],
      "IERC20": [
        770
      ],
      "IERC20Metadata": [
        795
      ],
      "Ownable": [
        104
      ],
      "TokenSwap": [
        1182
      ]
    },
    "id": 1183,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 896,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:23:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 897,
        "nodeType": "ImportDirective",
        "scope": 1183,
        "sourceUnit": 693,
        "src": "86:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 898,
        "nodeType": "ImportDirective",
        "scope": 1183,
        "sourceUnit": 105,
        "src": "143:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 899,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "221:7:8"
            },
            "id": 900,
            "nodeType": "InheritanceSpecifier",
            "src": "221:7:8"
          }
        ],
        "contractDependencies": [
          104,
          817
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1182,
        "linearizedBaseContracts": [
          1182,
          104,
          817
        ],
        "name": "TokenSwap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 903,
            "mutability": "mutable",
            "name": "token1",
            "nodeType": "VariableDeclaration",
            "scope": 1182,
            "src": "236:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$692",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 902,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 901,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 692,
                "src": "236:5:8"
              },
              "referencedDeclaration": 692,
              "src": "236:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$692",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 906,
            "mutability": "mutable",
            "name": "token2",
            "nodeType": "VariableDeclaration",
            "scope": 1182,
            "src": "263:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$692",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 905,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 904,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 692,
                "src": "263:5:8"
              },
              "referencedDeclaration": 692,
              "src": "263:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$692",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "a035b1fe",
            "id": 908,
            "mutability": "mutable",
            "name": "price",
            "nodeType": "VariableDeclaration",
            "scope": 1182,
            "src": "290:17:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 907,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "290:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 931,
              "nodeType": "Block",
              "src": "376:87:8",
              "statements": [
                {
                  "expression": {
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 919,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "387:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 920,
                      "name": "_token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 911,
                      "src": "396:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "387:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 922,
                  "nodeType": "ExpressionStatement",
                  "src": "387:16:8"
                },
                {
                  "expression": {
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 923,
                      "name": "token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 906,
                      "src": "414:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 924,
                      "name": "_token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "423:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "414:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "414:16:8"
                },
                {
                  "expression": {
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 927,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "441:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 928,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 916,
                      "src": "449:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "441:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "441:14:8"
                }
              ]
            },
            "id": 932,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "328:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 910,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 909,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "328:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "328:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "_token2",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "343:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 913,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 912,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "343:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "343:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "358:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "327:43:8"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:8"
            },
            "scope": 1182,
            "src": "316:147:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 943,
              "nodeType": "Block",
              "src": "527:33:8",
              "statements": [
                {
                  "expression": {
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 939,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "538:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 940,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "546:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "538:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 942,
                  "nodeType": "ExpressionStatement",
                  "src": "538:14:8"
                }
              ]
            },
            "functionSelector": "8d6cc56d",
            "id": 944,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 937,
                "modifierName": {
                  "id": 936,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "512:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "512:9:8"
              }
            ],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 934,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "492:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "491:13:8"
            },
            "returnParameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "527:0:8"
            },
            "scope": 1182,
            "src": "471:89:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "635:292:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 957,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 903,
                                "src": "662:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "654:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 955,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "654:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "654:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 961,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 947,
                                "src": "681:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "673:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 959,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "673:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "673:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "654:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 966,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 906,
                                "src": "700:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "692:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 964,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "692:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "692:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 970,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 947,
                                "src": "719:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "711:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 968,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "711:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "711:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "692:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "654:72:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f736974206e6f7420616c6c6f77656421",
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "728:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8",
                          "typeString": "literal_string \"Deposit not allowed!\""
                        },
                        "value": "Deposit not allowed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8",
                          "typeString": "literal_string \"Deposit not allowed!\""
                        }
                      ],
                      "id": 954,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "646:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:105:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 976,
                  "nodeType": "ExpressionStatement",
                  "src": "646:105:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 980,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "787:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "787:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 984,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "807:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "799:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 982,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "799:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "799:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 978,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "770:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 246,
                            "src": "770:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "770:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 987,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 949,
                          "src": "817:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "770:53:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323020616c6c6f77616e636520746f6f206c6f7721",
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "825:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        },
                        "value": "ERC20 allowance too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        }
                      ],
                      "id": 977,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "762:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "762:90:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "762:90:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 995,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "885:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "885:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 999,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "905:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "897:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 997,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "897:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "897:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1001,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "912:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 992,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "865:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "865:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "865:54:8"
                }
              ]
            },
            "functionSelector": "47e7ef24",
            "id": 1005,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 952,
                "modifierName": {
                  "id": 951,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "619:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "619:9:8"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "585:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 946,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 945,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "585:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "585:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "599:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "584:27:8"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:0:8"
            },
            "scope": 1182,
            "src": "568:359:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1108,
              "nodeType": "Block",
              "src": "993:645:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1014,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "1012:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1021:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1012:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5377617020616d6f756e7420746f6f206c6f7721",
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1024:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        },
                        "value": "Swap amount too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        }
                      ],
                      "id": 1013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1004:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1004:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1023,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 903,
                                "src": "1074:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1066:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1021,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1066:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1066:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1027,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1008,
                                "src": "1093:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1085:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1025,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1085:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1085:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1066:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1032,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 906,
                                "src": "1112:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1104:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1030,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1104:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1104:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1036,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1008,
                                "src": "1131:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1123:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1034,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1123:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1123:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1104:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1066:72:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e6765206e6f7420616c6c6f77656421",
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1140:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c",
                          "typeString": "literal_string \"Exchange not allowed!\""
                        },
                        "value": "Exchange not allowed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c",
                          "typeString": "literal_string \"Exchange not allowed!\""
                        }
                      ],
                      "id": 1020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1058:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1058:106:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:106:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1046,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1200:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1200:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1050,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1220:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 1049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1212:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1048,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1212:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1212:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1044,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1008,
                              "src": "1183:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 246,
                            "src": "1183:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1183:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1053,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "1230:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1183:53:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323020616c6c6f77616e636520746f6f206c6f7721",
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1238:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        },
                        "value": "ERC20 allowance too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        }
                      ],
                      "id": 1043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1175:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1175:90:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "1175:90:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1061,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1296:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1296:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1065,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1316:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1308:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1063,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1308:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1308:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1067,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "1323:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1058,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "1276:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "1276:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1276:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1069,
                  "nodeType": "ExpressionStatement",
                  "src": "1276:54:8"
                },
                {
                  "assignments": [
                    1072,
                    1074
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1072,
                      "mutability": "mutable",
                      "name": "tokenOutput",
                      "nodeType": "VariableDeclaration",
                      "scope": 1108,
                      "src": "1344:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1071,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1070,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 692,
                          "src": "1344:5:8"
                        },
                        "referencedDeclaration": 692,
                        "src": "1344:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1074,
                      "mutability": "mutable",
                      "name": "outputAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1108,
                      "src": "1363:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1073,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1363:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1079,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1076,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "1398:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 1077,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "1406:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1075,
                      "name": "getSwapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1181,
                      "src": "1384:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$692_$_t_uint256_$returns$_t_contract$_ERC20_$692_$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint256) view returns (contract ERC20,uint256)"
                      }
                    },
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$692_$_t_uint256_$",
                      "typeString": "tuple(contract ERC20,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1343:70:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1085,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1462:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 1084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1454:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1083,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1454:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1454:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1081,
                              "name": "tokenOutput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1072,
                              "src": "1432:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 203,
                            "src": "1432:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1432:36:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1088,
                          "name": "outputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "1472:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1432:52:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332302062616c616e636520746f6f206c6f7721",
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1486:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5",
                          "typeString": "literal_string \"ERC20 balance too low!\""
                        },
                        "value": "ERC20 balance too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5",
                          "typeString": "literal_string \"ERC20 balance too low!\""
                        }
                      ],
                      "id": 1080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1424:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:87:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "1424:87:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1094,
                          "name": "outputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "1530:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1545:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1530:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5377617020616d6f756e7420746f6f206c6f7721",
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1548:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        },
                        "value": "Swap amount too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        }
                      ],
                      "id": 1093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1522:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1522:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1099,
                  "nodeType": "ExpressionStatement",
                  "src": "1522:49:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1605:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1605:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1105,
                        "name": "outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "1617:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1100,
                        "name": "tokenOutput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "1584:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 228,
                      "src": "1584:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:46:8"
                }
              ]
            },
            "functionSelector": "045d0389",
            "id": 1109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1109,
                  "src": "953:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1007,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1006,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "953:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "953:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1109,
                  "src": "967:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "952:27:8"
            },
            "returnParameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:0:8"
            },
            "scope": 1182,
            "src": "935:703:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1180,
              "nodeType": "Block",
              "src": "1764:436:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1124,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "1786:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1778:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1778:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1778:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1128,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "1805:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1797:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1797:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1797:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1778:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1150,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "1961:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1953:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1148,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1953:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1953:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1154,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "1980:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1972:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1152,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1972:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1972:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1953:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1174,
                    "nodeType": "IfStatement",
                    "src": "1949:160:8",
                    "trueBody": {
                      "id": 1173,
                      "nodeType": "Block",
                      "src": "1989:120:8",
                      "statements": [
                        {
                          "expression": {
                            "id": 1159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1157,
                              "name": "tokenOutput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1118,
                              "src": "2004:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1158,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 903,
                              "src": "2018:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "src": "2004:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 1160,
                          "nodeType": "ExpressionStatement",
                          "src": "2004:20:8"
                        },
                        {
                          "expression": {
                            "id": 1171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1161,
                              "name": "outputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "2039:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1162,
                                  "name": "inputAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1114,
                                  "src": "2054:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1163,
                                  "name": "price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 908,
                                  "src": "2068:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2054:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2076:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1166,
                                      "name": "_token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1112,
                                      "src": "2080:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$692",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1167,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 179,
                                    "src": "2080:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 1168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2080:17:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "2076:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2054:43:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2039:58:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1172,
                          "nodeType": "ExpressionStatement",
                          "src": "2039:58:8"
                        }
                      ]
                    }
                  },
                  "id": 1175,
                  "nodeType": "IfStatement",
                  "src": "1775:334:8",
                  "trueBody": {
                    "id": 1147,
                    "nodeType": "Block",
                    "src": "1814:120:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1131,
                            "name": "tokenOutput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "1829:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1132,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "1843:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "1829:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 1134,
                        "nodeType": "ExpressionStatement",
                        "src": "1829:20:8"
                      },
                      {
                        "expression": {
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1135,
                            "name": "outputAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "1864:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1136,
                                "name": "inputAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1114,
                                "src": "1879:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1137,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1893:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1138,
                                      "name": "_token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1112,
                                      "src": "1897:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$692",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1139,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 179,
                                    "src": "1897:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 1140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1897:17:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1893:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1879:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1143,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "1917:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1879:43:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1864:58:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1146,
                        "nodeType": "ExpressionStatement",
                        "src": "1864:58:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1176,
                        "name": "tokenOutput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "2143:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 1177,
                        "name": "outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "2169:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1178,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2128:64:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$692_$_t_uint256_$",
                      "typeString": "tuple(contract ERC20,uint256)"
                    }
                  },
                  "functionReturnParameters": 1121,
                  "id": 1179,
                  "nodeType": "Return",
                  "src": "2121:71:8"
                }
              ]
            },
            "functionSelector": "1befa6db",
            "id": 1181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1669:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1111,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1110,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "1669:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "1669:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1114,
                  "mutability": "mutable",
                  "name": "inputAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1683:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1668:32:8"
            },
            "returnParameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1118,
                  "mutability": "mutable",
                  "name": "tokenOutput",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1721:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1117,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1116,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "1721:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "1721:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "outputAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1740:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1720:38:8"
            },
            "scope": 1182,
            "src": "1646:554:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1183,
        "src": "199:2004:8"
      }
    ],
    "src": "59:2144:8"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/TokenSwap.sol",
    "exportedSymbols": {
      "Context": [
        817
      ],
      "ERC20": [
        692
      ],
      "IERC20": [
        770
      ],
      "IERC20Metadata": [
        795
      ],
      "Ownable": [
        104
      ],
      "TokenSwap": [
        1182
      ]
    },
    "id": 1183,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 896,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:23:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 897,
        "nodeType": "ImportDirective",
        "scope": 1183,
        "sourceUnit": 693,
        "src": "86:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 898,
        "nodeType": "ImportDirective",
        "scope": 1183,
        "sourceUnit": 105,
        "src": "143:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 899,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "221:7:8"
            },
            "id": 900,
            "nodeType": "InheritanceSpecifier",
            "src": "221:7:8"
          }
        ],
        "contractDependencies": [
          104,
          817
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1182,
        "linearizedBaseContracts": [
          1182,
          104,
          817
        ],
        "name": "TokenSwap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 903,
            "mutability": "mutable",
            "name": "token1",
            "nodeType": "VariableDeclaration",
            "scope": 1182,
            "src": "236:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$692",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 902,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 901,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 692,
                "src": "236:5:8"
              },
              "referencedDeclaration": 692,
              "src": "236:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$692",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 906,
            "mutability": "mutable",
            "name": "token2",
            "nodeType": "VariableDeclaration",
            "scope": 1182,
            "src": "263:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$692",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 905,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 904,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 692,
                "src": "263:5:8"
              },
              "referencedDeclaration": 692,
              "src": "263:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$692",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "a035b1fe",
            "id": 908,
            "mutability": "mutable",
            "name": "price",
            "nodeType": "VariableDeclaration",
            "scope": 1182,
            "src": "290:17:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 907,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "290:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 931,
              "nodeType": "Block",
              "src": "376:87:8",
              "statements": [
                {
                  "expression": {
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 919,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "387:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 920,
                      "name": "_token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 911,
                      "src": "396:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "387:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 922,
                  "nodeType": "ExpressionStatement",
                  "src": "387:16:8"
                },
                {
                  "expression": {
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 923,
                      "name": "token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 906,
                      "src": "414:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 924,
                      "name": "_token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "423:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "414:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "414:16:8"
                },
                {
                  "expression": {
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 927,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "441:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 928,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 916,
                      "src": "449:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "441:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "441:14:8"
                }
              ]
            },
            "id": 932,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "328:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 910,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 909,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "328:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "328:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "_token2",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "343:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 913,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 912,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "343:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "343:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "358:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "327:43:8"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:8"
            },
            "scope": 1182,
            "src": "316:147:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 943,
              "nodeType": "Block",
              "src": "527:33:8",
              "statements": [
                {
                  "expression": {
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 939,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "538:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 940,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "546:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "538:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 942,
                  "nodeType": "ExpressionStatement",
                  "src": "538:14:8"
                }
              ]
            },
            "functionSelector": "8d6cc56d",
            "id": 944,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 937,
                "modifierName": {
                  "id": 936,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "512:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "512:9:8"
              }
            ],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 934,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "492:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "491:13:8"
            },
            "returnParameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "527:0:8"
            },
            "scope": 1182,
            "src": "471:89:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "635:292:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 957,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 903,
                                "src": "662:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "654:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 955,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "654:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "654:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 961,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 947,
                                "src": "681:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "673:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 959,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "673:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "673:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "654:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 966,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 906,
                                "src": "700:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "692:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 964,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "692:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "692:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 970,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 947,
                                "src": "719:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "711:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 968,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "711:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "711:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "692:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "654:72:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f736974206e6f7420616c6c6f77656421",
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "728:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8",
                          "typeString": "literal_string \"Deposit not allowed!\""
                        },
                        "value": "Deposit not allowed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8",
                          "typeString": "literal_string \"Deposit not allowed!\""
                        }
                      ],
                      "id": 954,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "646:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:105:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 976,
                  "nodeType": "ExpressionStatement",
                  "src": "646:105:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 980,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "787:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "787:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 984,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "807:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "799:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 982,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "799:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "799:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 978,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "770:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 246,
                            "src": "770:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "770:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 987,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 949,
                          "src": "817:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "770:53:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323020616c6c6f77616e636520746f6f206c6f7721",
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "825:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        },
                        "value": "ERC20 allowance too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        }
                      ],
                      "id": 977,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "762:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "762:90:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "762:90:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 995,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "885:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "885:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 999,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "905:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "897:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 997,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "897:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "897:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1001,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "912:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 992,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "865:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "865:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "865:54:8"
                }
              ]
            },
            "functionSelector": "47e7ef24",
            "id": 1005,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 952,
                "modifierName": {
                  "id": 951,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "619:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "619:9:8"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "585:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 946,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 945,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "585:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "585:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "599:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "584:27:8"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:0:8"
            },
            "scope": 1182,
            "src": "568:359:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1108,
              "nodeType": "Block",
              "src": "993:645:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1014,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "1012:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1021:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1012:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5377617020616d6f756e7420746f6f206c6f7721",
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1024:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        },
                        "value": "Swap amount too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        }
                      ],
                      "id": 1013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1004:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1004:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1023,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 903,
                                "src": "1074:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1066:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1021,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1066:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1066:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1027,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1008,
                                "src": "1093:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1085:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1025,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1085:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1085:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1066:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1032,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 906,
                                "src": "1112:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1104:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1030,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1104:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1104:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1036,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1008,
                                "src": "1131:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1123:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1034,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1123:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1123:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1104:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1066:72:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e6765206e6f7420616c6c6f77656421",
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1140:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c",
                          "typeString": "literal_string \"Exchange not allowed!\""
                        },
                        "value": "Exchange not allowed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c",
                          "typeString": "literal_string \"Exchange not allowed!\""
                        }
                      ],
                      "id": 1020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1058:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1058:106:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:106:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1046,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1200:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1200:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1050,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1220:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 1049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1212:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1048,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1212:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1212:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1044,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1008,
                              "src": "1183:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 246,
                            "src": "1183:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1183:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1053,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "1230:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1183:53:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323020616c6c6f77616e636520746f6f206c6f7721",
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1238:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        },
                        "value": "ERC20 allowance too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        }
                      ],
                      "id": 1043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1175:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1175:90:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "1175:90:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1061,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1296:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1296:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1065,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1316:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1308:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1063,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1308:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1308:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1067,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "1323:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1058,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "1276:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "1276:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1276:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1069,
                  "nodeType": "ExpressionStatement",
                  "src": "1276:54:8"
                },
                {
                  "assignments": [
                    1072,
                    1074
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1072,
                      "mutability": "mutable",
                      "name": "tokenOutput",
                      "nodeType": "VariableDeclaration",
                      "scope": 1108,
                      "src": "1344:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1071,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1070,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 692,
                          "src": "1344:5:8"
                        },
                        "referencedDeclaration": 692,
                        "src": "1344:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1074,
                      "mutability": "mutable",
                      "name": "outputAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1108,
                      "src": "1363:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1073,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1363:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1079,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1076,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "1398:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 1077,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "1406:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1075,
                      "name": "getSwapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1181,
                      "src": "1384:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$692_$_t_uint256_$returns$_t_contract$_ERC20_$692_$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint256) view returns (contract ERC20,uint256)"
                      }
                    },
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$692_$_t_uint256_$",
                      "typeString": "tuple(contract ERC20,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1343:70:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1085,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1462:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 1084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1454:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1083,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1454:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1454:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1081,
                              "name": "tokenOutput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1072,
                              "src": "1432:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 203,
                            "src": "1432:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1432:36:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1088,
                          "name": "outputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "1472:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1432:52:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332302062616c616e636520746f6f206c6f7721",
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1486:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5",
                          "typeString": "literal_string \"ERC20 balance too low!\""
                        },
                        "value": "ERC20 balance too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5",
                          "typeString": "literal_string \"ERC20 balance too low!\""
                        }
                      ],
                      "id": 1080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1424:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:87:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "1424:87:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1094,
                          "name": "outputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "1530:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1545:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1530:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5377617020616d6f756e7420746f6f206c6f7721",
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1548:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        },
                        "value": "Swap amount too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        }
                      ],
                      "id": 1093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1522:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1522:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1099,
                  "nodeType": "ExpressionStatement",
                  "src": "1522:49:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1605:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1605:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1105,
                        "name": "outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "1617:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1100,
                        "name": "tokenOutput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "1584:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 228,
                      "src": "1584:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:46:8"
                }
              ]
            },
            "functionSelector": "045d0389",
            "id": 1109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1109,
                  "src": "953:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1007,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1006,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "953:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "953:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1109,
                  "src": "967:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "952:27:8"
            },
            "returnParameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:0:8"
            },
            "scope": 1182,
            "src": "935:703:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1180,
              "nodeType": "Block",
              "src": "1764:436:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1124,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "1786:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1778:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1778:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1778:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1128,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "1805:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1797:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1797:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1797:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1778:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1150,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "1961:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1953:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1148,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1953:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1953:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1154,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "1980:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1972:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1152,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1972:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1972:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1953:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1174,
                    "nodeType": "IfStatement",
                    "src": "1949:160:8",
                    "trueBody": {
                      "id": 1173,
                      "nodeType": "Block",
                      "src": "1989:120:8",
                      "statements": [
                        {
                          "expression": {
                            "id": 1159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1157,
                              "name": "tokenOutput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1118,
                              "src": "2004:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1158,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 903,
                              "src": "2018:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "src": "2004:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 1160,
                          "nodeType": "ExpressionStatement",
                          "src": "2004:20:8"
                        },
                        {
                          "expression": {
                            "id": 1171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1161,
                              "name": "outputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "2039:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1162,
                                  "name": "inputAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1114,
                                  "src": "2054:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1163,
                                  "name": "price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 908,
                                  "src": "2068:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2054:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2076:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1166,
                                      "name": "_token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1112,
                                      "src": "2080:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$692",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1167,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 179,
                                    "src": "2080:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 1168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2080:17:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "2076:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2054:43:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2039:58:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1172,
                          "nodeType": "ExpressionStatement",
                          "src": "2039:58:8"
                        }
                      ]
                    }
                  },
                  "id": 1175,
                  "nodeType": "IfStatement",
                  "src": "1775:334:8",
                  "trueBody": {
                    "id": 1147,
                    "nodeType": "Block",
                    "src": "1814:120:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1131,
                            "name": "tokenOutput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "1829:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1132,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "1843:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "1829:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 1134,
                        "nodeType": "ExpressionStatement",
                        "src": "1829:20:8"
                      },
                      {
                        "expression": {
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1135,
                            "name": "outputAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "1864:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1136,
                                "name": "inputAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1114,
                                "src": "1879:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1137,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1893:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1138,
                                      "name": "_token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1112,
                                      "src": "1897:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$692",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1139,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 179,
                                    "src": "1897:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 1140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1897:17:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1893:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1879:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1143,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "1917:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1879:43:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1864:58:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1146,
                        "nodeType": "ExpressionStatement",
                        "src": "1864:58:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1176,
                        "name": "tokenOutput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "2143:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 1177,
                        "name": "outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "2169:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1178,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2128:64:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$692_$_t_uint256_$",
                      "typeString": "tuple(contract ERC20,uint256)"
                    }
                  },
                  "functionReturnParameters": 1121,
                  "id": 1179,
                  "nodeType": "Return",
                  "src": "2121:71:8"
                }
              ]
            },
            "functionSelector": "1befa6db",
            "id": 1181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1669:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1111,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1110,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "1669:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "1669:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1114,
                  "mutability": "mutable",
                  "name": "inputAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1683:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1668:32:8"
            },
            "returnParameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1118,
                  "mutability": "mutable",
                  "name": "tokenOutput",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1721:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1117,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1116,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "1721:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "1721:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "outputAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1740:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1720:38:8"
            },
            "scope": 1182,
            "src": "1646:554:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1183,
        "src": "199:2004:8"
      }
    ],
    "src": "59:2144:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.1+commit.df193b15.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xBA43b2CA451DfEbD871e84904B0AA5bCd5E90D23",
      "transactionHash": "0x1083f8bc1e81fa2233b9cb968db1dd89dd245775dda8b941e2ed423dca7ca239"
    }
  },
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-03-25T16:28:53.694Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}