{
  "contractName": "TokenSwap",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token1",
          "type": "address"
        },
        {
          "internalType": "contract ERC20",
          "name": "_token2",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "updatePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "exchange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"_token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exchange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TokenSwap.sol\":\"TokenSwap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/TokenSwap.sol\":{\"keccak256\":\"0x63b34cae9c4c143d0762261e5fe982629ec803f8fa7882e73ddf2e2b04de3c1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7144cf9ad3c811dfde1c8b212ceae18b9e672fdd2e0864d74ecdb11a972899a0\",\"dweb:/ipfs/QmQWq6iuey2Kv92dX2j5pFE8p7sLHQKVRRXN5U8L7VyNsd\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001961380380620019618339818101604052810190620000379190620001e3565b620000576200004b620000e960201b60201c565b620000f160201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600381905550505050620002bf565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001c6816200028b565b92915050565b600081519050620001dd81620002a5565b92915050565b600080600060608486031215620001f957600080fd5b60006200020986828701620001b5565b93505060206200021c86828701620001b5565b92505060406200022f86828701620001cc565b9150509250925092565b6000620002468262000261565b9050919050565b60006200025a8262000239565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b62000296816200024d565b8114620002a257600080fd5b50565b620002b08162000281565b8114620002bc57600080fd5b50565b61169280620002cf6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638d6cc56d1161005b5780638d6cc56d146100c45780638da5cb5b146100e0578063a035b1fe146100fe578063f2fde38b1461011c5761007d565b8063045d03891461008257806347e7ef241461009e578063715018a6146100ba575b600080fd5b61009c60048036038101906100979190610e5c565b610138565b005b6100b860048036038101906100b39190610e5c565b610575565b005b6100c261083c565b005b6100de60048036038101906100d99190610e98565b6108c4565b005b6100e861094a565b6040516100f59190611026565b60405180910390f35b610106610973565b60405161011391906111aa565b60405180910390f35b61013660048036038101906101319190610e0a565b610979565b005b6000811161017b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101729061112a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158061022657508173ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b610265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c906110ea565b60405180910390fd5b808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102a1929190611041565b60206040518083038186803b1580156102b957600080fd5b505afa1580156102cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f19190610ec1565b1015610332576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103299061110a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161036f9392919061106a565b602060405180830381600087803b15801561038957600080fd5b505af115801561039d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c19190610e33565b506000806103cf8484610a71565b91509150808273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161040d9190611026565b60206040518083038186803b15801561042557600080fd5b505afa158015610439573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045d9190610ec1565b101561049e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104959061114a565b60405180910390fd5b600081116104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061112a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161051c9291906110a1565b602060405180830381600087803b15801561053657600080fd5b505af115801561054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056e9190610e33565b5050505050565b61057d610cc0565b73ffffffffffffffffffffffffffffffffffffffff1661059b61094a565b73ffffffffffffffffffffffffffffffffffffffff16146105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061116a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158061069c57508173ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b6106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d29061118a565b60405180910390fd5b808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610717929190611041565b60206040518083038186803b15801561072f57600080fd5b505afa158015610743573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107679190610ec1565b10156107a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079f9061110a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016107e59392919061106a565b602060405180830381600087803b1580156107ff57600080fd5b505af1158015610813573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108379190610e33565b505050565b610844610cc0565b73ffffffffffffffffffffffffffffffffffffffff1661086261094a565b73ffffffffffffffffffffffffffffffffffffffff16146108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af9061116a565b60405180910390fd5b6108c26000610cc8565b565b6108cc610cc0565b73ffffffffffffffffffffffffffffffffffffffff166108ea61094a565b73ffffffffffffffffffffffffffffffffffffffff1614610940576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109379061116a565b60405180910390fd5b8060038190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b610981610cc0565b73ffffffffffffffffffffffffffffffffffffffff1661099f61094a565b73ffffffffffffffffffffffffffffffffffffffff16146109f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ec9061116a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5c906110ca565b60405180910390fd5b610a6e81610cc8565b50565b6000808373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b9857600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506003548473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3857600080fd5b505afa158015610b4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b709190610eea565b600a610b7c919061125a565b84610b879190611378565b610b9191906111d6565b9050610cb9565b8373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610cb857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610c5957600080fd5b505afa158015610c6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c919190610eea565b600a610c9d919061125a565b60035484610cab9190611378565b610cb591906111d6565b90505b5b9250929050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610d9b816115e9565b92915050565b600081519050610db081611600565b92915050565b600081359050610dc581611617565b92915050565b600081359050610dda8161162e565b92915050565b600081519050610def8161162e565b92915050565b600081519050610e0481611645565b92915050565b600060208284031215610e1c57600080fd5b6000610e2a84828501610d8c565b91505092915050565b600060208284031215610e4557600080fd5b6000610e5384828501610da1565b91505092915050565b60008060408385031215610e6f57600080fd5b6000610e7d85828601610db6565b9250506020610e8e85828601610dcb565b9150509250929050565b600060208284031215610eaa57600080fd5b6000610eb884828501610dcb565b91505092915050565b600060208284031215610ed357600080fd5b6000610ee184828501610de0565b91505092915050565b600060208284031215610efc57600080fd5b6000610f0a84828501610df5565b91505092915050565b610f1c816113d2565b82525050565b6000610f2f6026836111c5565b9150610f3a826114a4565b604082019050919050565b6000610f526015836111c5565b9150610f5d826114f3565b602082019050919050565b6000610f756018836111c5565b9150610f808261151c565b602082019050919050565b6000610f986014836111c5565b9150610fa382611545565b602082019050919050565b6000610fbb6016836111c5565b9150610fc68261156e565b602082019050919050565b6000610fde6020836111c5565b9150610fe982611597565b602082019050919050565b60006110016014836111c5565b915061100c826115c0565b602082019050919050565b61102081611422565b82525050565b600060208201905061103b6000830184610f13565b92915050565b60006040820190506110566000830185610f13565b6110636020830184610f13565b9392505050565b600060608201905061107f6000830186610f13565b61108c6020830185610f13565b6110996040830184611017565b949350505050565b60006040820190506110b66000830185610f13565b6110c36020830184611017565b9392505050565b600060208201905081810360008301526110e381610f22565b9050919050565b6000602082019050818103600083015261110381610f45565b9050919050565b6000602082019050818103600083015261112381610f68565b9050919050565b6000602082019050818103600083015261114381610f8b565b9050919050565b6000602082019050818103600083015261116381610fae565b9050919050565b6000602082019050818103600083015261118381610fd1565b9050919050565b600060208201905081810360008301526111a381610ff4565b9050919050565b60006020820190506111bf6000830184611017565b92915050565b600082825260208201905092915050565b60006111e182611422565b91506111ec83611422565b9250826111fc576111fb611468565b5b828204905092915050565b6000808291508390505b60018511156112515780860481111561122d5761122c611439565b5b600185161561123c5780820291505b808102905061124a85611497565b9450611211565b94509492505050565b600061126582611422565b91506112708361142c565b925061129d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846112a5565b905092915050565b6000826112b55760019050611371565b816112c35760009050611371565b81600181146112d957600281146112e357611312565b6001915050611371565b60ff8411156112f5576112f4611439565b5b8360020a91508482111561130c5761130b611439565b5b50611371565b5060208310610133831016604e8410600b84101617156113475782820a90508381111561134257611341611439565b5b611371565b6113548484846001611207565b9250905081840481111561136b5761136a611439565b5b81810290505b9392505050565b600061138382611422565b915061138e83611422565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113c7576113c6611439565b5b828202905092915050565b60006113dd82611402565b9050919050565b60008115159050919050565b60006113fb826113d2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45786368616e6765206e6f7420616c6c6f776564210000000000000000000000600082015250565b7f455243323020616c6c6f77616e636520746f6f206c6f77210000000000000000600082015250565b7f5377617020616d6f756e7420746f6f206c6f7721000000000000000000000000600082015250565b7f45524332302062616c616e636520746f6f206c6f772100000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4465706f736974206e6f7420616c6c6f77656421000000000000000000000000600082015250565b6115f2816113d2565b81146115fd57600080fd5b50565b611609816113e4565b811461161457600080fd5b50565b611620816113f0565b811461162b57600080fd5b50565b61163781611422565b811461164257600080fd5b50565b61164e8161142c565b811461165957600080fd5b5056fea2646970667358221220f9d44a3508c2d6dd34659e2f3e731ac0bb47f5e98cd922adca6c10babdd7a59b64736f6c63430008010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638d6cc56d1161005b5780638d6cc56d146100c45780638da5cb5b146100e0578063a035b1fe146100fe578063f2fde38b1461011c5761007d565b8063045d03891461008257806347e7ef241461009e578063715018a6146100ba575b600080fd5b61009c60048036038101906100979190610e5c565b610138565b005b6100b860048036038101906100b39190610e5c565b610575565b005b6100c261083c565b005b6100de60048036038101906100d99190610e98565b6108c4565b005b6100e861094a565b6040516100f59190611026565b60405180910390f35b610106610973565b60405161011391906111aa565b60405180910390f35b61013660048036038101906101319190610e0a565b610979565b005b6000811161017b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101729061112a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158061022657508173ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b610265576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025c906110ea565b60405180910390fd5b808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016102a1929190611041565b60206040518083038186803b1580156102b957600080fd5b505afa1580156102cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f19190610ec1565b1015610332576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103299061110a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161036f9392919061106a565b602060405180830381600087803b15801561038957600080fd5b505af115801561039d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c19190610e33565b506000806103cf8484610a71565b91509150808273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161040d9190611026565b60206040518083038186803b15801561042557600080fd5b505afa158015610439573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045d9190610ec1565b101561049e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104959061114a565b60405180910390fd5b600081116104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d89061112a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161051c9291906110a1565b602060405180830381600087803b15801561053657600080fd5b505af115801561054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056e9190610e33565b5050505050565b61057d610cc0565b73ffffffffffffffffffffffffffffffffffffffff1661059b61094a565b73ffffffffffffffffffffffffffffffffffffffff16146105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e89061116a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158061069c57508173ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b6106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d29061118a565b60405180910390fd5b808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610717929190611041565b60206040518083038186803b15801561072f57600080fd5b505afa158015610743573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107679190610ec1565b10156107a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079f9061110a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016107e59392919061106a565b602060405180830381600087803b1580156107ff57600080fd5b505af1158015610813573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108379190610e33565b505050565b610844610cc0565b73ffffffffffffffffffffffffffffffffffffffff1661086261094a565b73ffffffffffffffffffffffffffffffffffffffff16146108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af9061116a565b60405180910390fd5b6108c26000610cc8565b565b6108cc610cc0565b73ffffffffffffffffffffffffffffffffffffffff166108ea61094a565b73ffffffffffffffffffffffffffffffffffffffff1614610940576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109379061116a565b60405180910390fd5b8060038190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b610981610cc0565b73ffffffffffffffffffffffffffffffffffffffff1661099f61094a565b73ffffffffffffffffffffffffffffffffffffffff16146109f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ec9061116a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5c906110ca565b60405180910390fd5b610a6e81610cc8565b50565b6000808373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b9857600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506003548473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610b3857600080fd5b505afa158015610b4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b709190610eea565b600a610b7c919061125a565b84610b879190611378565b610b9191906111d6565b9050610cb9565b8373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610cb857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691508373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610c5957600080fd5b505afa158015610c6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c919190610eea565b600a610c9d919061125a565b60035484610cab9190611378565b610cb591906111d6565b90505b5b9250929050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610d9b816115e9565b92915050565b600081519050610db081611600565b92915050565b600081359050610dc581611617565b92915050565b600081359050610dda8161162e565b92915050565b600081519050610def8161162e565b92915050565b600081519050610e0481611645565b92915050565b600060208284031215610e1c57600080fd5b6000610e2a84828501610d8c565b91505092915050565b600060208284031215610e4557600080fd5b6000610e5384828501610da1565b91505092915050565b60008060408385031215610e6f57600080fd5b6000610e7d85828601610db6565b9250506020610e8e85828601610dcb565b9150509250929050565b600060208284031215610eaa57600080fd5b6000610eb884828501610dcb565b91505092915050565b600060208284031215610ed357600080fd5b6000610ee184828501610de0565b91505092915050565b600060208284031215610efc57600080fd5b6000610f0a84828501610df5565b91505092915050565b610f1c816113d2565b82525050565b6000610f2f6026836111c5565b9150610f3a826114a4565b604082019050919050565b6000610f526015836111c5565b9150610f5d826114f3565b602082019050919050565b6000610f756018836111c5565b9150610f808261151c565b602082019050919050565b6000610f986014836111c5565b9150610fa382611545565b602082019050919050565b6000610fbb6016836111c5565b9150610fc68261156e565b602082019050919050565b6000610fde6020836111c5565b9150610fe982611597565b602082019050919050565b60006110016014836111c5565b915061100c826115c0565b602082019050919050565b61102081611422565b82525050565b600060208201905061103b6000830184610f13565b92915050565b60006040820190506110566000830185610f13565b6110636020830184610f13565b9392505050565b600060608201905061107f6000830186610f13565b61108c6020830185610f13565b6110996040830184611017565b949350505050565b60006040820190506110b66000830185610f13565b6110c36020830184611017565b9392505050565b600060208201905081810360008301526110e381610f22565b9050919050565b6000602082019050818103600083015261110381610f45565b9050919050565b6000602082019050818103600083015261112381610f68565b9050919050565b6000602082019050818103600083015261114381610f8b565b9050919050565b6000602082019050818103600083015261116381610fae565b9050919050565b6000602082019050818103600083015261118381610fd1565b9050919050565b600060208201905081810360008301526111a381610ff4565b9050919050565b60006020820190506111bf6000830184611017565b92915050565b600082825260208201905092915050565b60006111e182611422565b91506111ec83611422565b9250826111fc576111fb611468565b5b828204905092915050565b6000808291508390505b60018511156112515780860481111561122d5761122c611439565b5b600185161561123c5780820291505b808102905061124a85611497565b9450611211565b94509492505050565b600061126582611422565b91506112708361142c565b925061129d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846112a5565b905092915050565b6000826112b55760019050611371565b816112c35760009050611371565b81600181146112d957600281146112e357611312565b6001915050611371565b60ff8411156112f5576112f4611439565b5b8360020a91508482111561130c5761130b611439565b5b50611371565b5060208310610133831016604e8410600b84101617156113475782820a90508381111561134257611341611439565b5b611371565b6113548484846001611207565b9250905081840481111561136b5761136a611439565b5b81810290505b9392505050565b600061138382611422565b915061138e83611422565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113c7576113c6611439565b5b828202905092915050565b60006113dd82611402565b9050919050565b60008115159050919050565b60006113fb826113d2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f45786368616e6765206e6f7420616c6c6f776564210000000000000000000000600082015250565b7f455243323020616c6c6f77616e636520746f6f206c6f77210000000000000000600082015250565b7f5377617020616d6f756e7420746f6f206c6f7721000000000000000000000000600082015250565b7f45524332302062616c616e636520746f6f206c6f772100000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4465706f736974206e6f7420616c6c6f77656421000000000000000000000000600082015250565b6115f2816113d2565b81146115fd57600080fd5b50565b611609816113e4565b811461161457600080fd5b50565b611620816113f0565b811461162b57600080fd5b50565b61163781611422565b811461164257600080fd5b50565b61164e8161142c565b811461165957600080fd5b5056fea2646970667358221220f9d44a3508c2d6dd34659e2f3e731ac0bb47f5e98cd922adca6c10babdd7a59b64736f6c63430008010033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1696:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "83:93:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "93:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "108:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "102:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "102:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "164:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC20_$692",
                      "nodeType": "YulIdentifier",
                      "src": "124:39:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "124:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "124:46:9"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC20_$692_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "61:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "69:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "77:5:9",
                "type": ""
              }
            ],
            "src": "7:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "245:80:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "255:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "270:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "264:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "255:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "313:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "286:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "286:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "286:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "223:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "231:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "239:5:9",
                "type": ""
              }
            ],
            "src": "182:143:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "468:511:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "514:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "523:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "516:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "516:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "516:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "489:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "498:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "485:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "485:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "510:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "478:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "540:141:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "555:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "569:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "559:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "584:87:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "643:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "654:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "639:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "639:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "663:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20_$692_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "594:44:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "594:77:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "584:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "691:142:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "706:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "720:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "710:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "736:87:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "795:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "806:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "791:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "791:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "815:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20_$692_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "746:44:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "746:77:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "736:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "843:129:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "858:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "872:2:9",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "862:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "888:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "934:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "945:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "930:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "930:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "954:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "898:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "898:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "888:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$692t_contract$_ERC20_$692t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "422:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "433:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "445:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "453:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "461:6:9",
                "type": ""
              }
            ],
            "src": "331:648:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1030:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1040:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1069:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1051:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1040:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1012:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1022:7:9",
                "type": ""
              }
            ],
            "src": "985:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1145:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1155:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1184:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1166:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1166:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1155:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC20_$692",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1127:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1137:7:9",
                "type": ""
              }
            ],
            "src": "1087:109:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1272:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1279:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1268:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1268:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1257:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1229:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1239:7:9",
                "type": ""
              }
            ],
            "src": "1202:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1379:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1389:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1400:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1389:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1361:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1371:7:9",
                "type": ""
              }
            ],
            "src": "1334:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1473:92:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1543:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1552:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1555:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1545:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1545:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1545:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1496:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1534:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC20_$692",
                              "nodeType": "YulIdentifier",
                              "src": "1503:30:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1503:37:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1493:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1493:48:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1486:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1486:56:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1483:2:9"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC20_$692",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1466:5:9",
                "type": ""
              }
            ],
            "src": "1417:148:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1614:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1671:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1680:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1683:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1673:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1673:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1673:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1637:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1662:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1644:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1644:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1634:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1634:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1627:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1627:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1624:2:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1607:5:9",
                "type": ""
              }
            ],
            "src": "1571:122:9"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_ERC20_$692_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$692(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$692t_contract$_ERC20_$692t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$692_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_ERC20_$692_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$692(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_contract$_ERC20_$692(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$692(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:16146:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:9"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:9",
                "type": ""
              }
            ],
            "src": "7:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "212:77:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "222:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "237:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "231:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "222:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "253:23:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "253:30:9"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "190:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "198:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "206:5:9",
                "type": ""
              }
            ],
            "src": "152:137:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "360:100:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "370:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "392:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "379:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "379:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "370:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "448:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC20_$692",
                      "nodeType": "YulIdentifier",
                      "src": "408:39:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "408:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "408:46:9"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC20_$692",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "338:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "346:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "354:5:9",
                "type": ""
              }
            ],
            "src": "295:165:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "518:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "528:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "550:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "537:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "528:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "593:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "566:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "566:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "566:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "496:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "504:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "512:5:9",
                "type": ""
              }
            ],
            "src": "466:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "674:80:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "684:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "699:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "693:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "693:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "684:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "742:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "715:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "715:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "715:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "652:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "660:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "668:5:9",
                "type": ""
              }
            ],
            "src": "611:143:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "821:78:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "831:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "846:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "840:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "840:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "831:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "887:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "862:24:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "862:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "862:31:9"
                }
              ]
            },
            "name": "abi_decode_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "799:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "807:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "815:5:9",
                "type": ""
              }
            ],
            "src": "760:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "971:196:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1017:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1026:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1029:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1019:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1019:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1019:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "992:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1001:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "988:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "988:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1013:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "984:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "984:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "981:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1043:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1058:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1072:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1062:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1087:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1122:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1133:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1118:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1118:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1142:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1097:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1097:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1087:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "941:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "952:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "964:6:9",
                "type": ""
              }
            ],
            "src": "905:262:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:204:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1293:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1302:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1305:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1295:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1295:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1295:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1268:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1277:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1289:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1260:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1260:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1257:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1319:125:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1334:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1348:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1338:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1363:71:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1406:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1417:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1402:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1402:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1426:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1373:28:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1373:61:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1363:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1217:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1228:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1240:6:9",
                "type": ""
              }
            ],
            "src": "1173:278:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1553:337:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1599:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1608:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1611:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1601:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1601:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1601:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1574:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1583:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1570:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1570:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1595:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1566:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1566:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1563:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1625:130:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1640:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1654:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1644:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1669:76:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1717:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1728:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1713:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1713:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1737:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20_$692",
                          "nodeType": "YulIdentifier",
                          "src": "1679:33:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1679:66:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1669:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1765:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1780:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1794:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1784:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1810:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1845:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1856:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1841:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1841:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1865:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1820:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1820:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1810:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$692t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1515:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1526:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1538:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1546:6:9",
                "type": ""
              }
            ],
            "src": "1457:433:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1962:196:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2008:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2017:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2020:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2010:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2010:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2010:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1983:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1992:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1979:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1979:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2004:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1975:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1975:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1972:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2034:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2049:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2063:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2053:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2078:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2113:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2124:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2109:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2109:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2133:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2088:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2088:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2078:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1932:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1943:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1955:6:9",
                "type": ""
              }
            ],
            "src": "1896:262:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2241:207:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2287:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2296:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2299:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2289:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2289:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2289:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2262:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2271:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2258:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2258:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2283:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2254:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2254:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2251:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2313:128:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2328:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2342:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2332:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2357:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2403:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2414:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2399:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2399:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2423:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2367:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2367:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2357:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2211:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2222:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2234:6:9",
                "type": ""
              }
            ],
            "src": "2164:284:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2529:205:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2575:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2584:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2587:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2577:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2577:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2577:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2550:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2559:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2546:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2546:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2571:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2542:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2542:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2539:2:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2601:126:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2616:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2630:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2620:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2645:72:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2689:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2700:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2685:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2685:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2709:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint8_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2655:29:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2655:62:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2645:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2499:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2510:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2522:6:9",
                "type": ""
              }
            ],
            "src": "2454:280:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2805:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2822:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2845:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2827:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2827:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2815:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2815:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2815:37:9"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2793:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2800:3:9",
                "type": ""
              }
            ],
            "src": "2740:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3010:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3020:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3086:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3091:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3027:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3027:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3020:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3192:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "3103:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3103:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3103:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3205:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3216:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3221:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3212:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3212:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3205:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2998:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3006:3:9",
                "type": ""
              }
            ],
            "src": "2864:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3382:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3392:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3458:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3463:2:9",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3399:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3399:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3392:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3564:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c",
                      "nodeType": "YulIdentifier",
                      "src": "3475:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3475:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3475:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3577:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3588:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3593:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3584:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3584:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3577:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3370:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3378:3:9",
                "type": ""
              }
            ],
            "src": "3236:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3754:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3764:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3830:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3835:2:9",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3771:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3771:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3764:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3936:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                      "nodeType": "YulIdentifier",
                      "src": "3847:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3847:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3847:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3949:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3960:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3965:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3956:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3956:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3949:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3742:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3750:3:9",
                "type": ""
              }
            ],
            "src": "3608:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4126:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4136:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4202:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4207:2:9",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4143:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4143:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4136:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4308:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                      "nodeType": "YulIdentifier",
                      "src": "4219:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4219:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4219:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4321:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4332:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4337:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4328:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4328:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4321:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4114:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4122:3:9",
                "type": ""
              }
            ],
            "src": "3980:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4498:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4508:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4574:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4579:2:9",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4515:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4515:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4508:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4680:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5",
                      "nodeType": "YulIdentifier",
                      "src": "4591:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4591:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4591:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4693:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4704:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4709:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4700:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4700:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4693:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4486:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4494:3:9",
                "type": ""
              }
            ],
            "src": "4352:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4870:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4880:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4946:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4951:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4887:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4887:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4880:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5052:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "4963:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4963:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4963:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5065:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5076:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5081:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5072:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5072:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5065:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4858:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4866:3:9",
                "type": ""
              }
            ],
            "src": "4724:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5242:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5252:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5318:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5323:2:9",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5259:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5259:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5252:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5424:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8",
                      "nodeType": "YulIdentifier",
                      "src": "5335:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5335:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5335:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5437:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5448:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5453:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5444:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5444:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5437:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5230:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5238:3:9",
                "type": ""
              }
            ],
            "src": "5096:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5533:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5550:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5573:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5555:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5555:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5543:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5543:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5543:37:9"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5521:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5528:3:9",
                "type": ""
              }
            ],
            "src": "5468:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5690:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5700:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5712:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5723:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5708:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5708:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5700:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5780:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5793:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5804:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5789:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5789:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5736:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5736:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5736:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5662:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5674:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5685:4:9",
                "type": ""
              }
            ],
            "src": "5592:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5946:206:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5956:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5968:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5979:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5964:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5964:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5956:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6036:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6049:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6060:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6045:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6045:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5992:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5992:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5992:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6117:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6130:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6141:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6126:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6126:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6073:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6073:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6073:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5910:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5922:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5930:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5941:4:9",
                "type": ""
              }
            ],
            "src": "5820:332:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6312:288:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6322:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6334:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6345:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6330:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6330:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6322:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6402:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6415:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6426:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6411:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6411:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6358:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6358:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6358:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6483:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6496:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6507:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6492:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6492:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6439:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6439:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6439:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6565:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6578:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6589:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6574:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6574:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6521:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6521:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6521:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6268:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6280:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6288:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6296:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6307:4:9",
                "type": ""
              }
            ],
            "src": "6158:442:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6732:206:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6742:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6754:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6765:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6750:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6750:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6742:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6822:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6835:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6846:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6831:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6831:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6778:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6778:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6778:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6903:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6916:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6927:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6912:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6912:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6859:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6859:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6859:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6696:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6708:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6716:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6727:4:9",
                "type": ""
              }
            ],
            "src": "6606:332:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7115:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7125:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7137:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7148:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7133:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7133:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7125:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7172:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7183:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7168:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7168:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7191:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7197:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7187:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7187:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7161:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7161:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7161:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7217:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7351:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7225:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7225:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7217:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7095:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7110:4:9",
                "type": ""
              }
            ],
            "src": "6944:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7540:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7550:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7562:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7573:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7558:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7558:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7550:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7597:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7608:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7593:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7593:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7616:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7622:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7612:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7612:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7586:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7586:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7586:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7642:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7776:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7650:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7650:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7642:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7520:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7535:4:9",
                "type": ""
              }
            ],
            "src": "7369:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7965:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7975:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7987:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7998:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7983:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7983:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7975:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8022:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8033:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8018:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8018:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8041:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8047:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8037:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8037:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8011:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8011:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8011:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8067:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8201:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8075:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8075:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8067:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7945:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7960:4:9",
                "type": ""
              }
            ],
            "src": "7794:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8390:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8400:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8412:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8423:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8408:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8408:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8400:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8447:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8458:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8443:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8443:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8466:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8472:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8462:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8462:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8436:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8436:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8436:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8492:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8626:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8500:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8500:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8492:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8370:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8385:4:9",
                "type": ""
              }
            ],
            "src": "8219:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8815:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8825:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8837:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8848:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8833:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8833:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8825:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8872:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8883:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8868:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8868:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8891:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8897:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8887:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8887:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8861:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8861:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8861:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8917:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9051:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8925:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8925:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8917:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8795:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8810:4:9",
                "type": ""
              }
            ],
            "src": "8644:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9240:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9250:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9262:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9273:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9258:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9258:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9250:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9297:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9308:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9293:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9293:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9316:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9322:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9312:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9312:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9286:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9286:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9286:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9342:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9476:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9350:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9350:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9342:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9220:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9235:4:9",
                "type": ""
              }
            ],
            "src": "9069:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9665:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9675:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9687:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9698:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9683:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9683:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9675:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9722:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9733:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9718:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9718:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9741:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9747:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9737:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9737:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9711:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9711:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9711:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9767:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9901:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9775:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9775:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9767:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9645:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9660:4:9",
                "type": ""
              }
            ],
            "src": "9494:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10017:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10027:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10039:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10050:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10035:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10035:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10027:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10107:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10120:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10131:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10116:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10116:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10063:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10063:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10063:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9989:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10001:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10012:4:9",
                "type": ""
              }
            ],
            "src": "9919:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10243:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10260:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10265:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10253:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10253:19:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10253:19:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10281:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10300:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10305:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10296:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10296:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10281:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10215:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10220:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10231:11:9",
                "type": ""
              }
            ],
            "src": "10147:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10364:143:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10374:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10397:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10379:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10379:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10374:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10408:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10431:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10413:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10413:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10408:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10455:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "10457:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10457:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10457:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10452:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10445:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10445:9:9"
                  },
                  "nodeType": "YulIf",
                  "src": "10442:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10487:14:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10496:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10499:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "10492:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10492:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "10487:1:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10353:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10356:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "10362:1:9",
                "type": ""
              }
            ],
            "src": "10322:185:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10586:775:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10596:15:9",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "10605:6:9"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "10596:5:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10620:14:9",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "10629:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "10620:4:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10678:677:9",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10766:22:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "10768:16:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10768:18:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10768:18:9"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10744:4:9"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "10754:3:9"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "10759:4:9"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "10750:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10750:14:9"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "10741:2:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10741:24:9"
                        },
                        "nodeType": "YulIf",
                        "src": "10738:2:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10833:419:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11213:25:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "11226:5:9"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "11233:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "11222:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11222:16:9"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "11213:5:9"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "10808:8:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10818:1:9",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "10804:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10804:16:9"
                        },
                        "nodeType": "YulIf",
                        "src": "10801:2:9"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11265:23:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11277:4:9"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11283:4:9"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "11273:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11273:15:9"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "11265:4:9"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "11301:44:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "11336:8:9"
                            }
                          ],
                          "functionName": {
                            "name": "shift_right_1_unsigned",
                            "nodeType": "YulIdentifier",
                            "src": "11313:22:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11313:32:9"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "11301:8:9"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10654:8:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10664:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10651:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10651:15:9"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10667:2:9",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10647:3:9",
                    "statements": []
                  },
                  "src": "10643:712:9"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "10541:6:9",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "10549:5:9",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10556:8:9",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "10566:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10574:5:9",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10581:4:9",
                "type": ""
              }
            ],
            "src": "10513:848:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11431:217:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11441:31:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "11467:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11449:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11449:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "11441:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11481:37:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11509:8:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "11493:15:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11493:25:9"
                  },
                  "variableNames": [
                    {
                      "name": "exponent",
                      "nodeType": "YulIdentifier",
                      "src": "11481:8:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11528:113:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "11558:4:9"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11564:8:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11574:66:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "11537:20:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11537:104:9"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "11528:5:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "11406:4:9",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "11412:8:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "11425:5:9",
                "type": ""
              }
            ],
            "src": "11367:281:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11714:1013:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11909:20:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11911:10:9",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "11920:1:9",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "11911:5:9"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "11922:5:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11899:8:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11892:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11892:16:9"
                  },
                  "nodeType": "YulIf",
                  "src": "11889:2:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11954:20:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11956:10:9",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "11965:1:9",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "11956:5:9"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "11967:5:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "11948:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11941:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11941:12:9"
                  },
                  "nodeType": "YulIf",
                  "src": "11938:2:9"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12084:20:9",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "12086:10:9",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12095:1:9",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "12086:5:9"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "12097:5:9"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12077:27:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12082:1:9",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12128:176:9",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "12163:22:9",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "12165:16:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12165:18:9"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12165:18:9"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "12148:8:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12158:3:9",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "12145:2:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12145:17:9"
                            },
                            "nodeType": "YulIf",
                            "src": "12142:2:9"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "12198:25:9",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12211:1:9",
                                  "type": "",
                                  "value": "2"
                                },
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "12214:8:9"
                                }
                              ],
                              "functionName": {
                                "name": "exp",
                                "nodeType": "YulIdentifier",
                                "src": "12207:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12207:16:9"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "12198:5:9"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "12254:22:9",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "12256:16:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12256:18:9"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12256:18:9"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "12242:5:9"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "12249:3:9"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "12239:2:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12239:14:9"
                            },
                            "nodeType": "YulIf",
                            "src": "12236:2:9"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "12289:5:9"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12113:191:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12118:1:9",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "12034:4:9"
                  },
                  "nodeType": "YulSwitch",
                  "src": "12027:277:9"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12436:123:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12450:28:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "12463:4:9"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "12469:8:9"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "12459:3:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12459:19:9"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "12450:5:9"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12509:22:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "12511:16:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12511:18:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12511:18:9"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "12497:5:9"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "12504:3:9"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "12494:2:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12494:14:9"
                        },
                        "nodeType": "YulIf",
                        "src": "12491:2:9"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "12544:5:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "12339:4:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12345:2:9",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12336:2:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12336:12:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "12353:8:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12363:2:9",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12350:2:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12350:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12332:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12332:35:9"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "12388:4:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12394:3:9",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12385:2:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12385:13:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "12403:8:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12413:2:9",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "12400:2:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12400:16:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12381:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12381:36:9"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "12316:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12316:111:9"
                  },
                  "nodeType": "YulIf",
                  "src": "12313:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12569:57:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12603:1:9",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12606:4:9"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "12612:8:9"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "12622:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "12584:18:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12584:42:9"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "12569:5:9"
                    },
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "12576:4:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12665:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12667:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12667:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12667:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "12642:5:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "12653:3:9"
                          },
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "12658:4:9"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "12649:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12649:14:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12639:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12639:25:9"
                  },
                  "nodeType": "YulIf",
                  "src": "12636:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12696:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "power",
                        "nodeType": "YulIdentifier",
                        "src": "12709:5:9"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "12716:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "12705:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12705:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "12696:5:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "11684:4:9",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "11690:8:9",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "11700:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "11708:5:9",
                "type": ""
              }
            ],
            "src": "11654:1073:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12781:300:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12791:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12814:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12796:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12796:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "12791:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12825:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12848:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12830:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12830:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "12825:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13023:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13025:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13025:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13025:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "12935:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12928:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12928:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "12921:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12921:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12943:1:9"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12950:66:9",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "13018:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "12946:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12946:74:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "12940:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12940:81:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12917:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12917:105:9"
                  },
                  "nodeType": "YulIf",
                  "src": "12914:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13055:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13070:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13073:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "13066:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13066:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "13055:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12764:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12767:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "12773:7:9",
                "type": ""
              }
            ],
            "src": "12733:348:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13132:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13142:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13171:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "13153:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13153:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13142:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13114:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13124:7:9",
                "type": ""
              }
            ],
            "src": "13087:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13231:48:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13241:32:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "13266:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13259:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13259:13:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13252:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13252:21:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13241:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13213:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13223:7:9",
                "type": ""
              }
            ],
            "src": "13189:90:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13343:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13353:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13382:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "13364:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13364:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13353:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC20_$692",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13325:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13335:7:9",
                "type": ""
              }
            ],
            "src": "13285:109:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13445:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13455:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13470:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13477:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13466:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13466:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13455:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13427:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13437:7:9",
                "type": ""
              }
            ],
            "src": "13400:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13577:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13587:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13598:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13587:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13559:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13569:7:9",
                "type": ""
              }
            ],
            "src": "13532:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13658:43:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13668:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13683:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13690:4:9",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13679:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13679:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "13668:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13640:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "13650:7:9",
                "type": ""
              }
            ],
            "src": "13615:86:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13735:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13752:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13755:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13745:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13745:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13745:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13849:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13852:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13842:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13842:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13842:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13873:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13876:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13866:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13866:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13866:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "13707:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13921:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13938:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13941:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13931:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13931:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13931:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14035:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14038:4:9",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14028:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14028:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14028:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14059:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14062:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14052:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14052:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14052:15:9"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "13893:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14130:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14140:34:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14165:1:9",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14168:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "14161:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14161:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "14140:8:9"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_1_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14111:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "14121:8:9",
                "type": ""
              }
            ],
            "src": "14079:102:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14293:119:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14315:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14323:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14311:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14311:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14327:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14304:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14304:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14304:58:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14383:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14391:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14379:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14379:15:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14396:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14372:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14372:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14372:33:9"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14285:6:9",
                "type": ""
              }
            ],
            "src": "14187:225:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14524:65:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14546:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14554:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14542:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14542:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14558:23:9",
                        "type": "",
                        "value": "Exchange not allowed!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14535:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14535:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14535:47:9"
                }
              ]
            },
            "name": "store_literal_in_memory_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14516:6:9",
                "type": ""
              }
            ],
            "src": "14418:171:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14701:68:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14723:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14731:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14719:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14719:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14735:26:9",
                        "type": "",
                        "value": "ERC20 allowance too low!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14712:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14712:50:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14712:50:9"
                }
              ]
            },
            "name": "store_literal_in_memory_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14693:6:9",
                "type": ""
              }
            ],
            "src": "14595:174:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14881:64:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14903:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14911:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14899:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14899:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14915:22:9",
                        "type": "",
                        "value": "Swap amount too low!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14892:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14892:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14892:46:9"
                }
              ]
            },
            "name": "store_literal_in_memory_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "14873:6:9",
                "type": ""
              }
            ],
            "src": "14775:170:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15057:66:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15079:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15087:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15075:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15075:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15091:24:9",
                        "type": "",
                        "value": "ERC20 balance too low!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15068:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15068:48:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15068:48:9"
                }
              ]
            },
            "name": "store_literal_in_memory_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15049:6:9",
                "type": ""
              }
            ],
            "src": "14951:172:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15235:76:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15257:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15265:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15253:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15253:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15269:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15246:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15246:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15246:58:9"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15227:6:9",
                "type": ""
              }
            ],
            "src": "15129:182:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15423:64:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15445:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15453:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15441:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15441:14:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15457:22:9",
                        "type": "",
                        "value": "Deposit not allowed!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15434:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15434:46:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15434:46:9"
                }
              ]
            },
            "name": "store_literal_in_memory_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15415:6:9",
                "type": ""
              }
            ],
            "src": "15317:170:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15536:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15593:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15602:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15605:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15595:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15595:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15595:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15559:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15584:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "15566:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15566:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15556:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15556:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15549:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15549:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "15546:2:9"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15529:5:9",
                "type": ""
              }
            ],
            "src": "15493:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15661:76:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15715:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15724:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15727:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15717:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15717:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15717:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15684:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15706:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "15691:14:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15691:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15681:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15681:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15674:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15674:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "15671:2:9"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15654:5:9",
                "type": ""
              }
            ],
            "src": "15621:116:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15799:92:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15869:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15878:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15881:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15871:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15871:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15871:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15822:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15860:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC20_$692",
                              "nodeType": "YulIdentifier",
                              "src": "15829:30:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15829:37:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15819:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15819:48:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15812:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15812:56:9"
                  },
                  "nodeType": "YulIf",
                  "src": "15809:2:9"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC20_$692",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15792:5:9",
                "type": ""
              }
            ],
            "src": "15743:148:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15940:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15997:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16006:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16009:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15999:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15999:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15999:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15963:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15988:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "15970:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15970:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15960:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15960:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15953:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15953:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "15950:2:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15933:5:9",
                "type": ""
              }
            ],
            "src": "15897:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16066:77:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16121:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16130:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16133:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16123:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16123:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16123:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "16089:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16112:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint8",
                              "nodeType": "YulIdentifier",
                              "src": "16096:15:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16096:22:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "16086:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16086:33:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16079:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16079:41:9"
                  },
                  "nodeType": "YulIf",
                  "src": "16076:2:9"
                }
              ]
            },
            "name": "validator_revert_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16059:5:9",
                "type": ""
              }
            ],
            "src": "16025:118:9"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_ERC20_$692(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ERC20_$692(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$692t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$692(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_ERC20_$692(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exchange not allowed!\")\n\n    }\n\n    function store_literal_in_memory_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20 allowance too low!\")\n\n    }\n\n    function store_literal_in_memory_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Swap amount too low!\")\n\n    }\n\n    function store_literal_in_memory_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20 balance too low!\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit not allowed!\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ERC20_$692(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$692(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "199:2006:8:-:0;;;316:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;396:7:8;387:6;;:16;;;;;;;;;;;;;;;;;;423:7;414:6;;:16;;;;;;;;;;;;;;;;;;449:6;441:5;:14;;;;316:147;;;199:2006;;640:96:4;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;7:169:9:-;;108:6;102:13;93:22;;124:46;164:5;124:46;:::i;:::-;83:93;;;;:::o;182:143::-;;270:6;264:13;255:22;;286:33;313:5;286:33;:::i;:::-;245:80;;;;:::o;331:648::-;;;;510:2;498:9;489:7;485:23;481:32;478:2;;;526:1;523;516:12;478:2;569:1;594:77;663:7;654:6;643:9;639:22;594:77;:::i;:::-;584:87;;540:141;720:2;746:77;815:7;806:6;795:9;791:22;746:77;:::i;:::-;736:87;;691:142;872:2;898:64;954:7;945:6;934:9;930:22;898:64;:::i;:::-;888:74;;843:129;468:511;;;;;:::o;985:96::-;;1051:24;1069:5;1051:24;:::i;:::-;1040:35;;1030:51;;;:::o;1087:109::-;;1166:24;1184:5;1166:24;:::i;:::-;1155:35;;1145:51;;;:::o;1202:126::-;;1279:42;1272:5;1268:54;1257:65;;1247:81;;;:::o;1334:77::-;;1400:5;1389:16;;1379:32;;;:::o;1417:148::-;1503:37;1534:5;1503:37;:::i;:::-;1496:5;1493:48;1483:2;;1555:1;1552;1545:12;1483:2;1473:92;:::o;1571:122::-;1644:24;1662:5;1644:24;:::i;:::-;1637:5;1634:35;1624:2;;1683:1;1680;1673:12;1624:2;1614:79;:::o;199:2006:8:-;;;;;;;",
  "deployedSourceMap": "199:2006:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;935:703;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;568:359;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;:::i;:::-;;471:89:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;290:17:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;935:703:8;1021:1;1012:6;:10;1004:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;1093:6;1066:34;;1074:6;;;;;;;;;;;1066:34;;;;:72;;;;1131:6;1104:34;;1112:6;;;;;;;;;;;1104:34;;;;1066:72;1058:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;1230:6;1183;:16;;;1200:10;1220:4;1183:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1175:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;1276:6;:19;;;1296:10;1316:4;1323:6;1276:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1344:17;1363;1384:29;1398:6;1406;1384:13;:29::i;:::-;1343:70;;;;1472:12;1432:11;:21;;;1462:4;1432:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;1424:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1545:1;1530:12;:16;1522:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1584:11;:20;;;1605:10;1617:12;1584:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;935:703;;;;:::o;568:359::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;681:6:8::1;654:34;;662:6;;;;;;;;;;;654:34;;;;:72;;;;719:6;692:34;;700:6;;;;;;;;;;;692:34;;;;654:72;646:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;817:6;770;:16;;;787:10;807:4;770:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;762:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;865:6;:19;;;885:10;905:4;912:6;865:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;568:359:::0;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;471:89:8:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;546:6:8::1;538:5;:14;;;;471:89:::0;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;290:17:8:-;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;1646:556:8:-;1723:17;1742;1807:6;1780:34;;1788:6;;;;;;;;;;;1780:34;;;1777:334;;;1845:6;;;;;;;;;;;1831:20;;1919:5;;1899:6;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1895:2;:21;;;;:::i;:::-;1881:11;:35;;;;:::i;:::-;:43;;;;:::i;:::-;1866:58;;1777:334;;;1982:6;1955:34;;1963:6;;;;;;;;;;;1955:34;;;1951:160;;;2020:6;;;;;;;;;;;2006:20;;2082:6;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2078:2;:21;;;;:::i;:::-;2070:5;;2056:11;:19;;;;:::i;:::-;:43;;;;:::i;:::-;2041:58;;1951:160;1777:334;1646:556;;;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2270:187;;:::o;7:139:9:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:165::-;;392:6;379:20;370:29;;408:46;448:5;408:46;:::i;:::-;360:100;;;;:::o;466:139::-;;550:6;537:20;528:29;;566:33;593:5;566:33;:::i;:::-;518:87;;;;:::o;611:143::-;;699:6;693:13;684:22;;715:33;742:5;715:33;:::i;:::-;674:80;;;;:::o;760:139::-;;846:6;840:13;831:22;;862:31;887:5;862:31;:::i;:::-;821:78;;;;:::o;905:262::-;;1013:2;1001:9;992:7;988:23;984:32;981:2;;;1029:1;1026;1019:12;981:2;1072:1;1097:53;1142:7;1133:6;1122:9;1118:22;1097:53;:::i;:::-;1087:63;;1043:117;971:196;;;;:::o;1173:278::-;;1289:2;1277:9;1268:7;1264:23;1260:32;1257:2;;;1305:1;1302;1295:12;1257:2;1348:1;1373:61;1426:7;1417:6;1406:9;1402:22;1373:61;:::i;:::-;1363:71;;1319:125;1247:204;;;;:::o;1457:433::-;;;1595:2;1583:9;1574:7;1570:23;1566:32;1563:2;;;1611:1;1608;1601:12;1563:2;1654:1;1679:66;1737:7;1728:6;1717:9;1713:22;1679:66;:::i;:::-;1669:76;;1625:130;1794:2;1820:53;1865:7;1856:6;1845:9;1841:22;1820:53;:::i;:::-;1810:63;;1765:118;1553:337;;;;;:::o;1896:262::-;;2004:2;1992:9;1983:7;1979:23;1975:32;1972:2;;;2020:1;2017;2010:12;1972:2;2063:1;2088:53;2133:7;2124:6;2113:9;2109:22;2088:53;:::i;:::-;2078:63;;2034:117;1962:196;;;;:::o;2164:284::-;;2283:2;2271:9;2262:7;2258:23;2254:32;2251:2;;;2299:1;2296;2289:12;2251:2;2342:1;2367:64;2423:7;2414:6;2403:9;2399:22;2367:64;:::i;:::-;2357:74;;2313:128;2241:207;;;;:::o;2454:280::-;;2571:2;2559:9;2550:7;2546:23;2542:32;2539:2;;;2587:1;2584;2577:12;2539:2;2630:1;2655:62;2709:7;2700:6;2689:9;2685:22;2655:62;:::i;:::-;2645:72;;2601:126;2529:205;;;;:::o;2740:118::-;2827:24;2845:5;2827:24;:::i;:::-;2822:3;2815:37;2805:53;;:::o;2864:366::-;;3027:67;3091:2;3086:3;3027:67;:::i;:::-;3020:74;;3103:93;3192:3;3103:93;:::i;:::-;3221:2;3216:3;3212:12;3205:19;;3010:220;;;:::o;3236:366::-;;3399:67;3463:2;3458:3;3399:67;:::i;:::-;3392:74;;3475:93;3564:3;3475:93;:::i;:::-;3593:2;3588:3;3584:12;3577:19;;3382:220;;;:::o;3608:366::-;;3771:67;3835:2;3830:3;3771:67;:::i;:::-;3764:74;;3847:93;3936:3;3847:93;:::i;:::-;3965:2;3960:3;3956:12;3949:19;;3754:220;;;:::o;3980:366::-;;4143:67;4207:2;4202:3;4143:67;:::i;:::-;4136:74;;4219:93;4308:3;4219:93;:::i;:::-;4337:2;4332:3;4328:12;4321:19;;4126:220;;;:::o;4352:366::-;;4515:67;4579:2;4574:3;4515:67;:::i;:::-;4508:74;;4591:93;4680:3;4591:93;:::i;:::-;4709:2;4704:3;4700:12;4693:19;;4498:220;;;:::o;4724:366::-;;4887:67;4951:2;4946:3;4887:67;:::i;:::-;4880:74;;4963:93;5052:3;4963:93;:::i;:::-;5081:2;5076:3;5072:12;5065:19;;4870:220;;;:::o;5096:366::-;;5259:67;5323:2;5318:3;5259:67;:::i;:::-;5252:74;;5335:93;5424:3;5335:93;:::i;:::-;5453:2;5448:3;5444:12;5437:19;;5242:220;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5533:53;;:::o;5592:222::-;;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5690:124;;;;:::o;5820:332::-;;5979:2;5968:9;5964:18;5956:26;;5992:71;6060:1;6049:9;6045:17;6036:6;5992:71;:::i;:::-;6073:72;6141:2;6130:9;6126:18;6117:6;6073:72;:::i;:::-;5946:206;;;;;:::o;6158:442::-;;6345:2;6334:9;6330:18;6322:26;;6358:71;6426:1;6415:9;6411:17;6402:6;6358:71;:::i;:::-;6439:72;6507:2;6496:9;6492:18;6483:6;6439:72;:::i;:::-;6521;6589:2;6578:9;6574:18;6565:6;6521:72;:::i;:::-;6312:288;;;;;;:::o;6606:332::-;;6765:2;6754:9;6750:18;6742:26;;6778:71;6846:1;6835:9;6831:17;6822:6;6778:71;:::i;:::-;6859:72;6927:2;6916:9;6912:18;6903:6;6859:72;:::i;:::-;6732:206;;;;;:::o;6944:419::-;;7148:2;7137:9;7133:18;7125:26;;7197:9;7191:4;7187:20;7183:1;7172:9;7168:17;7161:47;7225:131;7351:4;7225:131;:::i;:::-;7217:139;;7115:248;;;:::o;7369:419::-;;7573:2;7562:9;7558:18;7550:26;;7622:9;7616:4;7612:20;7608:1;7597:9;7593:17;7586:47;7650:131;7776:4;7650:131;:::i;:::-;7642:139;;7540:248;;;:::o;7794:419::-;;7998:2;7987:9;7983:18;7975:26;;8047:9;8041:4;8037:20;8033:1;8022:9;8018:17;8011:47;8075:131;8201:4;8075:131;:::i;:::-;8067:139;;7965:248;;;:::o;8219:419::-;;8423:2;8412:9;8408:18;8400:26;;8472:9;8466:4;8462:20;8458:1;8447:9;8443:17;8436:47;8500:131;8626:4;8500:131;:::i;:::-;8492:139;;8390:248;;;:::o;8644:419::-;;8848:2;8837:9;8833:18;8825:26;;8897:9;8891:4;8887:20;8883:1;8872:9;8868:17;8861:47;8925:131;9051:4;8925:131;:::i;:::-;8917:139;;8815:248;;;:::o;9069:419::-;;9273:2;9262:9;9258:18;9250:26;;9322:9;9316:4;9312:20;9308:1;9297:9;9293:17;9286:47;9350:131;9476:4;9350:131;:::i;:::-;9342:139;;9240:248;;;:::o;9494:419::-;;9698:2;9687:9;9683:18;9675:26;;9747:9;9741:4;9737:20;9733:1;9722:9;9718:17;9711:47;9775:131;9901:4;9775:131;:::i;:::-;9767:139;;9665:248;;;:::o;9919:222::-;;10050:2;10039:9;10035:18;10027:26;;10063:71;10131:1;10120:9;10116:17;10107:6;10063:71;:::i;:::-;10017:124;;;;:::o;10147:169::-;;10265:6;10260:3;10253:19;10305:4;10300:3;10296:14;10281:29;;10243:73;;;;:::o;10322:185::-;;10379:20;10397:1;10379:20;:::i;:::-;10374:25;;10413:20;10431:1;10413:20;:::i;:::-;10408:25;;10452:1;10442:2;;10457:18;;:::i;:::-;10442:2;10499:1;10496;10492:9;10487:14;;10364:143;;;;:::o;10513:848::-;;;10605:6;10596:15;;10629:5;10620:14;;10643:712;10664:1;10654:8;10651:15;10643:712;;;10759:4;10754:3;10750:14;10744:4;10741:24;10738:2;;;10768:18;;:::i;:::-;10738:2;10818:1;10808:8;10804:16;10801:2;;;11233:4;11226:5;11222:16;11213:25;;10801:2;11283:4;11277;11273:15;11265:23;;11313:32;11336:8;11313:32;:::i;:::-;11301:44;;10643:712;;;10586:775;;;;;;;:::o;11367:281::-;;11449:23;11467:4;11449:23;:::i;:::-;11441:31;;11493:25;11509:8;11493:25;:::i;:::-;11481:37;;11537:104;11574:66;11564:8;11558:4;11537:104;:::i;:::-;11528:113;;11431:217;;;;:::o;11654:1073::-;;11899:8;11889:2;;11920:1;11911:10;;11922:5;;11889:2;11948:4;11938:2;;11965:1;11956:10;;11967:5;;11938:2;12034:4;12082:1;12077:27;;;;12118:1;12113:191;;;;12027:277;;12077:27;12095:1;12086:10;;12097:5;;;12113:191;12158:3;12148:8;12145:17;12142:2;;;12165:18;;:::i;:::-;12142:2;12214:8;12211:1;12207:16;12198:25;;12249:3;12242:5;12239:14;12236:2;;;12256:18;;:::i;:::-;12236:2;12289:5;;;12027:277;;12413:2;12403:8;12400:16;12394:3;12388:4;12385:13;12381:36;12363:2;12353:8;12350:16;12345:2;12339:4;12336:12;12332:35;12316:111;12313:2;;;12469:8;12463:4;12459:19;12450:28;;12504:3;12497:5;12494:14;12491:2;;;12511:18;;:::i;:::-;12491:2;12544:5;;12313:2;12584:42;12622:3;12612:8;12606:4;12603:1;12584:42;:::i;:::-;12569:57;;;;12658:4;12653:3;12649:14;12642:5;12639:25;12636:2;;;12667:18;;:::i;:::-;12636:2;12716:4;12709:5;12705:16;12696:25;;11714:1013;;;;;;:::o;12733:348::-;;12796:20;12814:1;12796:20;:::i;:::-;12791:25;;12830:20;12848:1;12830:20;:::i;:::-;12825:25;;13018:1;12950:66;12946:74;12943:1;12940:81;12935:1;12928:9;12921:17;12917:105;12914:2;;;13025:18;;:::i;:::-;12914:2;13073:1;13070;13066:9;13055:20;;12781:300;;;;:::o;13087:96::-;;13153:24;13171:5;13153:24;:::i;:::-;13142:35;;13132:51;;;:::o;13189:90::-;;13266:5;13259:13;13252:21;13241:32;;13231:48;;;:::o;13285:109::-;;13364:24;13382:5;13364:24;:::i;:::-;13353:35;;13343:51;;;:::o;13400:126::-;;13477:42;13470:5;13466:54;13455:65;;13445:81;;;:::o;13532:77::-;;13598:5;13587:16;;13577:32;;;:::o;13615:86::-;;13690:4;13683:5;13679:16;13668:27;;13658:43;;;:::o;13707:180::-;13755:77;13752:1;13745:88;13852:4;13849:1;13842:15;13876:4;13873:1;13866:15;13893:180;13941:77;13938:1;13931:88;14038:4;14035:1;14028:15;14062:4;14059:1;14052:15;14079:102;;14168:5;14165:1;14161:13;14140:34;;14130:51;;;:::o;14187:225::-;14327:34;14323:1;14315:6;14311:14;14304:58;14396:8;14391:2;14383:6;14379:15;14372:33;14293:119;:::o;14418:171::-;14558:23;14554:1;14546:6;14542:14;14535:47;14524:65;:::o;14595:174::-;14735:26;14731:1;14723:6;14719:14;14712:50;14701:68;:::o;14775:170::-;14915:22;14911:1;14903:6;14899:14;14892:46;14881:64;:::o;14951:172::-;15091:24;15087:1;15079:6;15075:14;15068:48;15057:66;:::o;15129:182::-;15269:34;15265:1;15257:6;15253:14;15246:58;15235:76;:::o;15317:170::-;15457:22;15453:1;15445:6;15441:14;15434:46;15423:64;:::o;15493:122::-;15566:24;15584:5;15566:24;:::i;:::-;15559:5;15556:35;15546:2;;15605:1;15602;15595:12;15546:2;15536:79;:::o;15621:116::-;15691:21;15706:5;15691:21;:::i;:::-;15684:5;15681:32;15671:2;;15727:1;15724;15717:12;15671:2;15661:76;:::o;15743:148::-;15829:37;15860:5;15829:37;:::i;:::-;15822:5;15819:48;15809:2;;15881:1;15878;15871:12;15809:2;15799:92;:::o;15897:122::-;15970:24;15988:5;15970:24;:::i;:::-;15963:5;15960:35;15950:2;;16009:1;16006;15999:12;15950:2;15940:79;:::o;16025:118::-;16096:22;16112:5;16096:22;:::i;:::-;16089:5;16086:33;16076:2;;16133:1;16130;16123:12;16076:2;16066:77;:::o",
  "source": "// contracts/Days365.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.1;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TokenSwap is Ownable {\r\n    ERC20 private token1;\r\n    ERC20 private token2;\r\n    uint public price;\r\n\r\n    constructor(ERC20 _token1, ERC20 _token2, uint _price)\r\n    {\r\n        token1 = _token1;\r\n        token2 = _token2;\r\n        price = _price;\r\n    }\r\n\r\n    function updatePrice(uint _price) public onlyOwner\r\n    {\r\n        price = _price;\r\n    }\r\n\r\n    function deposit(ERC20 _token, uint amount) public onlyOwner \r\n    {\r\n        require(address(token1) != address(_token) || address(token2) != address(_token), \"Deposit not allowed!\");\r\n        require(_token.allowance(msg.sender, address(this)) >= amount, \"ERC20 allowance too low!\");\r\n\r\n        _token.transferFrom(msg.sender, address(this), amount);\r\n    }\r\n\r\n    function exchange(ERC20 _token, uint amount) public \r\n    {\r\n        require(amount > 0, \"Swap amount too low!\");\r\n        require(address(token1) != address(_token) || address(token2) != address(_token), \"Exchange not allowed!\");\r\n        require(_token.allowance(msg.sender, address(this)) >= amount, \"ERC20 allowance too low!\");\r\n        _token.transferFrom(msg.sender, address(this), amount);\r\n\r\n        (ERC20 tokenOutput, uint outputAmount) = getSwapAmount(_token, amount);\r\n        require(tokenOutput.balanceOf(address(this)) >= outputAmount, \"ERC20 balance too low!\");\r\n        require(outputAmount > 0, \"Swap amount too low!\");\r\n\r\n        tokenOutput.transfer(msg.sender, outputAmount);\r\n    }\r\n\r\n    function getSwapAmount(ERC20 _token, uint inputAmount) internal view returns(ERC20 tokenOutput, uint outputAmount)\r\n    {\r\n        if(address(token1) == address(_token)) {\r\n            tokenOutput = token2;\r\n            outputAmount = inputAmount * 10**_token.decimals() / price;\r\n        }\r\n        else if (address(token2) == address(_token)) {\r\n            tokenOutput = token1;\r\n            outputAmount = inputAmount * price / 10**_token.decimals();\r\n        }\r\n\r\n        return (\r\n            tokenOutput,\r\n            outputAmount\r\n        );\r\n    }\r\n}",
  "sourcePath": "E:\\Users\\adria\\Ether\\TokenSwap\\contracts\\TokenSwap.sol",
  "ast": {
    "absolutePath": "project:/contracts/TokenSwap.sol",
    "exportedSymbols": {
      "Context": [
        817
      ],
      "ERC20": [
        692
      ],
      "IERC20": [
        770
      ],
      "IERC20Metadata": [
        795
      ],
      "Ownable": [
        104
      ],
      "TokenSwap": [
        1182
      ]
    },
    "id": 1183,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 896,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:23:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 897,
        "nodeType": "ImportDirective",
        "scope": 1183,
        "sourceUnit": 693,
        "src": "86:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 898,
        "nodeType": "ImportDirective",
        "scope": 1183,
        "sourceUnit": 105,
        "src": "143:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 899,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "221:7:8"
            },
            "id": 900,
            "nodeType": "InheritanceSpecifier",
            "src": "221:7:8"
          }
        ],
        "contractDependencies": [
          104,
          817
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1182,
        "linearizedBaseContracts": [
          1182,
          104,
          817
        ],
        "name": "TokenSwap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 903,
            "mutability": "mutable",
            "name": "token1",
            "nodeType": "VariableDeclaration",
            "scope": 1182,
            "src": "236:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$692",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 902,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 901,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 692,
                "src": "236:5:8"
              },
              "referencedDeclaration": 692,
              "src": "236:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$692",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 906,
            "mutability": "mutable",
            "name": "token2",
            "nodeType": "VariableDeclaration",
            "scope": 1182,
            "src": "263:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$692",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 905,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 904,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 692,
                "src": "263:5:8"
              },
              "referencedDeclaration": 692,
              "src": "263:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$692",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "a035b1fe",
            "id": 908,
            "mutability": "mutable",
            "name": "price",
            "nodeType": "VariableDeclaration",
            "scope": 1182,
            "src": "290:17:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 907,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "290:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 931,
              "nodeType": "Block",
              "src": "376:87:8",
              "statements": [
                {
                  "expression": {
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 919,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "387:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 920,
                      "name": "_token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 911,
                      "src": "396:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "387:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 922,
                  "nodeType": "ExpressionStatement",
                  "src": "387:16:8"
                },
                {
                  "expression": {
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 923,
                      "name": "token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 906,
                      "src": "414:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 924,
                      "name": "_token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "423:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "414:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "414:16:8"
                },
                {
                  "expression": {
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 927,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "441:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 928,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 916,
                      "src": "449:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "441:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "441:14:8"
                }
              ]
            },
            "id": 932,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "328:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 910,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 909,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "328:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "328:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "_token2",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "343:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 913,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 912,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "343:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "343:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "358:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "327:43:8"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:8"
            },
            "scope": 1182,
            "src": "316:147:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 943,
              "nodeType": "Block",
              "src": "527:33:8",
              "statements": [
                {
                  "expression": {
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 939,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "538:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 940,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "546:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "538:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 942,
                  "nodeType": "ExpressionStatement",
                  "src": "538:14:8"
                }
              ]
            },
            "functionSelector": "8d6cc56d",
            "id": 944,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 937,
                "modifierName": {
                  "id": 936,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "512:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "512:9:8"
              }
            ],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 934,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "492:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "491:13:8"
            },
            "returnParameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "527:0:8"
            },
            "scope": 1182,
            "src": "471:89:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "635:292:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 957,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 903,
                                "src": "662:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "654:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 955,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "654:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "654:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 961,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 947,
                                "src": "681:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "673:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 959,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "673:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "673:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "654:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 966,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 906,
                                "src": "700:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "692:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 964,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "692:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "692:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 970,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 947,
                                "src": "719:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "711:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 968,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "711:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "711:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "692:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "654:72:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f736974206e6f7420616c6c6f77656421",
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "728:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8",
                          "typeString": "literal_string \"Deposit not allowed!\""
                        },
                        "value": "Deposit not allowed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8",
                          "typeString": "literal_string \"Deposit not allowed!\""
                        }
                      ],
                      "id": 954,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "646:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:105:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 976,
                  "nodeType": "ExpressionStatement",
                  "src": "646:105:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 980,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "787:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "787:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 984,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "807:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "799:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 982,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "799:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "799:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 978,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "770:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 246,
                            "src": "770:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "770:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 987,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 949,
                          "src": "817:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "770:53:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323020616c6c6f77616e636520746f6f206c6f7721",
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "825:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        },
                        "value": "ERC20 allowance too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        }
                      ],
                      "id": 977,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "762:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "762:90:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "762:90:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 995,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "885:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "885:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 999,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "905:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "897:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 997,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "897:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "897:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1001,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "912:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 992,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "865:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "865:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "865:54:8"
                }
              ]
            },
            "functionSelector": "47e7ef24",
            "id": 1005,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 952,
                "modifierName": {
                  "id": 951,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "619:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "619:9:8"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "585:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 946,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 945,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "585:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "585:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "599:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "584:27:8"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:0:8"
            },
            "scope": 1182,
            "src": "568:359:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1108,
              "nodeType": "Block",
              "src": "993:645:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1014,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "1012:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1021:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1012:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5377617020616d6f756e7420746f6f206c6f7721",
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1024:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        },
                        "value": "Swap amount too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        }
                      ],
                      "id": 1013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1004:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1004:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1023,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 903,
                                "src": "1074:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1066:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1021,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1066:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1066:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1027,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1008,
                                "src": "1093:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1085:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1025,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1085:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1085:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1066:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1032,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 906,
                                "src": "1112:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1104:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1030,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1104:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1104:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1036,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1008,
                                "src": "1131:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1123:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1034,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1123:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1123:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1104:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1066:72:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e6765206e6f7420616c6c6f77656421",
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1140:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c",
                          "typeString": "literal_string \"Exchange not allowed!\""
                        },
                        "value": "Exchange not allowed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c",
                          "typeString": "literal_string \"Exchange not allowed!\""
                        }
                      ],
                      "id": 1020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1058:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1058:106:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:106:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1046,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1200:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1200:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1050,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1220:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 1049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1212:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1048,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1212:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1212:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1044,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1008,
                              "src": "1183:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 246,
                            "src": "1183:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1183:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1053,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "1230:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1183:53:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323020616c6c6f77616e636520746f6f206c6f7721",
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1238:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        },
                        "value": "ERC20 allowance too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        }
                      ],
                      "id": 1043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1175:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1175:90:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "1175:90:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1061,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1296:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1296:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1065,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1316:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1308:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1063,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1308:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1308:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1067,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "1323:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1058,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "1276:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "1276:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1276:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1069,
                  "nodeType": "ExpressionStatement",
                  "src": "1276:54:8"
                },
                {
                  "assignments": [
                    1072,
                    1074
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1072,
                      "mutability": "mutable",
                      "name": "tokenOutput",
                      "nodeType": "VariableDeclaration",
                      "scope": 1108,
                      "src": "1344:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1071,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1070,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 692,
                          "src": "1344:5:8"
                        },
                        "referencedDeclaration": 692,
                        "src": "1344:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1074,
                      "mutability": "mutable",
                      "name": "outputAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1108,
                      "src": "1363:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1073,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1363:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1079,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1076,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "1398:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 1077,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "1406:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1075,
                      "name": "getSwapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1181,
                      "src": "1384:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$692_$_t_uint256_$returns$_t_contract$_ERC20_$692_$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint256) view returns (contract ERC20,uint256)"
                      }
                    },
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$692_$_t_uint256_$",
                      "typeString": "tuple(contract ERC20,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1343:70:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1085,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1462:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 1084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1454:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1083,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1454:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1454:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1081,
                              "name": "tokenOutput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1072,
                              "src": "1432:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 203,
                            "src": "1432:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1432:36:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1088,
                          "name": "outputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "1472:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1432:52:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332302062616c616e636520746f6f206c6f7721",
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1486:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5",
                          "typeString": "literal_string \"ERC20 balance too low!\""
                        },
                        "value": "ERC20 balance too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5",
                          "typeString": "literal_string \"ERC20 balance too low!\""
                        }
                      ],
                      "id": 1080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1424:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:87:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "1424:87:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1094,
                          "name": "outputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "1530:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1545:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1530:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5377617020616d6f756e7420746f6f206c6f7721",
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1548:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        },
                        "value": "Swap amount too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        }
                      ],
                      "id": 1093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1522:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1522:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1099,
                  "nodeType": "ExpressionStatement",
                  "src": "1522:49:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1605:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1605:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1105,
                        "name": "outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "1617:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1100,
                        "name": "tokenOutput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "1584:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 228,
                      "src": "1584:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:46:8"
                }
              ]
            },
            "functionSelector": "045d0389",
            "id": 1109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1109,
                  "src": "953:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1007,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1006,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "953:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "953:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1109,
                  "src": "967:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "952:27:8"
            },
            "returnParameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:0:8"
            },
            "scope": 1182,
            "src": "935:703:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1180,
              "nodeType": "Block",
              "src": "1766:436:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1124,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "1788:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1780:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1780:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1780:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1128,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "1807:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1799:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1799:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1799:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1780:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1150,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "1963:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1955:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1148,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1955:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1955:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1154,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "1982:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1974:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1152,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1974:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1974:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1955:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1174,
                    "nodeType": "IfStatement",
                    "src": "1951:160:8",
                    "trueBody": {
                      "id": 1173,
                      "nodeType": "Block",
                      "src": "1991:120:8",
                      "statements": [
                        {
                          "expression": {
                            "id": 1159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1157,
                              "name": "tokenOutput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1118,
                              "src": "2006:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1158,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 903,
                              "src": "2020:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "src": "2006:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 1160,
                          "nodeType": "ExpressionStatement",
                          "src": "2006:20:8"
                        },
                        {
                          "expression": {
                            "id": 1171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1161,
                              "name": "outputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "2041:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1162,
                                  "name": "inputAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1114,
                                  "src": "2056:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1163,
                                  "name": "price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 908,
                                  "src": "2070:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2056:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2078:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1166,
                                      "name": "_token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1112,
                                      "src": "2082:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$692",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1167,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 179,
                                    "src": "2082:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 1168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2082:17:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "2078:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2056:43:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2041:58:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1172,
                          "nodeType": "ExpressionStatement",
                          "src": "2041:58:8"
                        }
                      ]
                    }
                  },
                  "id": 1175,
                  "nodeType": "IfStatement",
                  "src": "1777:334:8",
                  "trueBody": {
                    "id": 1147,
                    "nodeType": "Block",
                    "src": "1816:120:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1131,
                            "name": "tokenOutput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "1831:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1132,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "1845:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "1831:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 1134,
                        "nodeType": "ExpressionStatement",
                        "src": "1831:20:8"
                      },
                      {
                        "expression": {
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1135,
                            "name": "outputAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "1866:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1136,
                                "name": "inputAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1114,
                                "src": "1881:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1137,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1895:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1138,
                                      "name": "_token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1112,
                                      "src": "1899:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$692",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1139,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 179,
                                    "src": "1899:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 1140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1899:17:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1895:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1881:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1143,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "1919:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1881:43:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1866:58:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1146,
                        "nodeType": "ExpressionStatement",
                        "src": "1866:58:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1176,
                        "name": "tokenOutput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "2145:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 1177,
                        "name": "outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "2171:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1178,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2130:64:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$692_$_t_uint256_$",
                      "typeString": "tuple(contract ERC20,uint256)"
                    }
                  },
                  "functionReturnParameters": 1121,
                  "id": 1179,
                  "nodeType": "Return",
                  "src": "2123:71:8"
                }
              ]
            },
            "id": 1181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1669:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1111,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1110,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "1669:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "1669:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1114,
                  "mutability": "mutable",
                  "name": "inputAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1683:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1668:32:8"
            },
            "returnParameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1118,
                  "mutability": "mutable",
                  "name": "tokenOutput",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1723:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1117,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1116,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "1723:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "1723:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "outputAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1742:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1742:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1722:38:8"
            },
            "scope": 1182,
            "src": "1646:556:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1183,
        "src": "199:2006:8"
      }
    ],
    "src": "59:2146:8"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/TokenSwap.sol",
    "exportedSymbols": {
      "Context": [
        817
      ],
      "ERC20": [
        692
      ],
      "IERC20": [
        770
      ],
      "IERC20Metadata": [
        795
      ],
      "Ownable": [
        104
      ],
      "TokenSwap": [
        1182
      ]
    },
    "id": 1183,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 896,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:23:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 897,
        "nodeType": "ImportDirective",
        "scope": 1183,
        "sourceUnit": 693,
        "src": "86:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 898,
        "nodeType": "ImportDirective",
        "scope": 1183,
        "sourceUnit": 105,
        "src": "143:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 899,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "221:7:8"
            },
            "id": 900,
            "nodeType": "InheritanceSpecifier",
            "src": "221:7:8"
          }
        ],
        "contractDependencies": [
          104,
          817
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1182,
        "linearizedBaseContracts": [
          1182,
          104,
          817
        ],
        "name": "TokenSwap",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 903,
            "mutability": "mutable",
            "name": "token1",
            "nodeType": "VariableDeclaration",
            "scope": 1182,
            "src": "236:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$692",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 902,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 901,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 692,
                "src": "236:5:8"
              },
              "referencedDeclaration": 692,
              "src": "236:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$692",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 906,
            "mutability": "mutable",
            "name": "token2",
            "nodeType": "VariableDeclaration",
            "scope": 1182,
            "src": "263:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$692",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 905,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 904,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 692,
                "src": "263:5:8"
              },
              "referencedDeclaration": 692,
              "src": "263:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$692",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "a035b1fe",
            "id": 908,
            "mutability": "mutable",
            "name": "price",
            "nodeType": "VariableDeclaration",
            "scope": 1182,
            "src": "290:17:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 907,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "290:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 931,
              "nodeType": "Block",
              "src": "376:87:8",
              "statements": [
                {
                  "expression": {
                    "id": 921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 919,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "387:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 920,
                      "name": "_token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 911,
                      "src": "396:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "387:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 922,
                  "nodeType": "ExpressionStatement",
                  "src": "387:16:8"
                },
                {
                  "expression": {
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 923,
                      "name": "token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 906,
                      "src": "414:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 924,
                      "name": "_token2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "423:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "414:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "414:16:8"
                },
                {
                  "expression": {
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 927,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "441:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 928,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 916,
                      "src": "449:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "441:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "441:14:8"
                }
              ]
            },
            "id": 932,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "_token1",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "328:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 910,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 909,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "328:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "328:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "_token2",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "343:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 913,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 912,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "343:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "343:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 932,
                  "src": "358:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "327:43:8"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:8"
            },
            "scope": 1182,
            "src": "316:147:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 943,
              "nodeType": "Block",
              "src": "527:33:8",
              "statements": [
                {
                  "expression": {
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 939,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "538:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 940,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 934,
                      "src": "546:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "538:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 942,
                  "nodeType": "ExpressionStatement",
                  "src": "538:14:8"
                }
              ]
            },
            "functionSelector": "8d6cc56d",
            "id": 944,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 937,
                "modifierName": {
                  "id": 936,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "512:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "512:9:8"
              }
            ],
            "name": "updatePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 934,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 944,
                  "src": "492:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "491:13:8"
            },
            "returnParameters": {
              "id": 938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "527:0:8"
            },
            "scope": 1182,
            "src": "471:89:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "635:292:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 957,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 903,
                                "src": "662:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "654:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 955,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "654:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "654:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 961,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 947,
                                "src": "681:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "673:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 959,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "673:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "673:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "654:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 966,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 906,
                                "src": "700:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "692:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 964,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "692:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "692:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 970,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 947,
                                "src": "719:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "711:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 968,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "711:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "711:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "692:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "654:72:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f736974206e6f7420616c6c6f77656421",
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "728:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8",
                          "typeString": "literal_string \"Deposit not allowed!\""
                        },
                        "value": "Deposit not allowed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baa03b78156c0fc1cc60189a699eb8f8b2a39544e132ffec74b97bf9a24b3cc8",
                          "typeString": "literal_string \"Deposit not allowed!\""
                        }
                      ],
                      "id": 954,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "646:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:105:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 976,
                  "nodeType": "ExpressionStatement",
                  "src": "646:105:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 980,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "787:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "787:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 984,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "807:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "799:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 982,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "799:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "799:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 978,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 947,
                              "src": "770:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 246,
                            "src": "770:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "770:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 987,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 949,
                          "src": "817:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "770:53:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323020616c6c6f77616e636520746f6f206c6f7721",
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "825:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        },
                        "value": "ERC20 allowance too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        }
                      ],
                      "id": 977,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "762:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "762:90:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 991,
                  "nodeType": "ExpressionStatement",
                  "src": "762:90:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 995,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "885:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "885:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 999,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "905:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "897:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 997,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "897:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "897:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1001,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "912:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 992,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "865:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "865:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1003,
                  "nodeType": "ExpressionStatement",
                  "src": "865:54:8"
                }
              ]
            },
            "functionSelector": "47e7ef24",
            "id": 1005,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 952,
                "modifierName": {
                  "id": 951,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "619:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "619:9:8"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "585:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 946,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 945,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "585:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "585:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "599:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "584:27:8"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:0:8"
            },
            "scope": 1182,
            "src": "568:359:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1108,
              "nodeType": "Block",
              "src": "993:645:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1014,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "1012:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1021:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1012:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5377617020616d6f756e7420746f6f206c6f7721",
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1024:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        },
                        "value": "Swap amount too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        }
                      ],
                      "id": 1013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1004:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1004:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1023,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 903,
                                "src": "1074:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1066:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1021,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1066:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1066:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1027,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1008,
                                "src": "1093:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1085:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1025,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1085:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1085:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1066:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 1032,
                                "name": "token2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 906,
                                "src": "1112:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1104:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1030,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1104:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1104:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 1036,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1008,
                                "src": "1131:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$692",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "id": 1035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1123:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1034,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1123:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1123:15:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1104:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1066:72:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e6765206e6f7420616c6c6f77656421",
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1140:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c",
                          "typeString": "literal_string \"Exchange not allowed!\""
                        },
                        "value": "Exchange not allowed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a0837aa4734736309c0239c64c2bb7175d4c81bd80e9d969b93586ac7aac02c",
                          "typeString": "literal_string \"Exchange not allowed!\""
                        }
                      ],
                      "id": 1020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1058:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1058:106:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:106:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1046,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1200:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1200:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1050,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1220:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 1049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1212:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1048,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1212:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1212:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1044,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1008,
                              "src": "1183:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 246,
                            "src": "1183:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1183:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1053,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1010,
                          "src": "1230:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1183:53:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243323020616c6c6f77616e636520746f6f206c6f7721",
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1238:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        },
                        "value": "ERC20 allowance too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac3e060e8ed8f7cdc4847adf1b77e32e99718bf15c3113d573020955f78a710",
                          "typeString": "literal_string \"ERC20 allowance too low!\""
                        }
                      ],
                      "id": 1043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1175:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1175:90:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "1175:90:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1061,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1296:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1296:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1065,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1316:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1182",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1308:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1063,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1308:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1308:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1067,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "1323:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1058,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "1276:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "1276:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1276:54:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1069,
                  "nodeType": "ExpressionStatement",
                  "src": "1276:54:8"
                },
                {
                  "assignments": [
                    1072,
                    1074
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1072,
                      "mutability": "mutable",
                      "name": "tokenOutput",
                      "nodeType": "VariableDeclaration",
                      "scope": 1108,
                      "src": "1344:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$692",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1071,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1070,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 692,
                          "src": "1344:5:8"
                        },
                        "referencedDeclaration": 692,
                        "src": "1344:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1074,
                      "mutability": "mutable",
                      "name": "outputAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1108,
                      "src": "1363:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1073,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1363:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1079,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1076,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1008,
                        "src": "1398:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 1077,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "1406:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1075,
                      "name": "getSwapAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1181,
                      "src": "1384:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_ERC20_$692_$_t_uint256_$returns$_t_contract$_ERC20_$692_$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint256) view returns (contract ERC20,uint256)"
                      }
                    },
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$692_$_t_uint256_$",
                      "typeString": "tuple(contract ERC20,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1343:70:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1085,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1462:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1182",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 1084,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1454:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1083,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1454:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1454:13:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1081,
                              "name": "tokenOutput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1072,
                              "src": "1432:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 203,
                            "src": "1432:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1432:36:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1088,
                          "name": "outputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "1472:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1432:52:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332302062616c616e636520746f6f206c6f7721",
                        "id": 1090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1486:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5",
                          "typeString": "literal_string \"ERC20 balance too low!\""
                        },
                        "value": "ERC20 balance too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81a0b199cc2ba9a09d60fc8fee249a368e3e47608135e19ea382a4f4f4cce4e5",
                          "typeString": "literal_string \"ERC20 balance too low!\""
                        }
                      ],
                      "id": 1080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1424:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:87:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "1424:87:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1094,
                          "name": "outputAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "1530:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1545:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1530:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5377617020616d6f756e7420746f6f206c6f7721",
                        "id": 1097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1548:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        },
                        "value": "Swap amount too low!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ddd44feb1b0665402681d507b93da25c9b149e01a8f3022b1caaaac01bb24c3",
                          "typeString": "literal_string \"Swap amount too low!\""
                        }
                      ],
                      "id": 1093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1522:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1522:49:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1099,
                  "nodeType": "ExpressionStatement",
                  "src": "1522:49:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1103,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1605:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1605:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1105,
                        "name": "outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "1617:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1100,
                        "name": "tokenOutput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "1584:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 228,
                      "src": "1584:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:46:8"
                }
              ]
            },
            "functionSelector": "045d0389",
            "id": 1109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1109,
                  "src": "953:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1007,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1006,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "953:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "953:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1109,
                  "src": "967:11:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "952:27:8"
            },
            "returnParameters": {
              "id": 1012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "993:0:8"
            },
            "scope": 1182,
            "src": "935:703:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1180,
              "nodeType": "Block",
              "src": "1766:436:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1124,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "1788:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1780:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1780:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1780:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1128,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "1807:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1799:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1799:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1799:15:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1780:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1150,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "1963:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1955:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1148,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1955:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1955:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1154,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "1982:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1974:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1152,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1974:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1974:15:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1955:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 1174,
                    "nodeType": "IfStatement",
                    "src": "1951:160:8",
                    "trueBody": {
                      "id": 1173,
                      "nodeType": "Block",
                      "src": "1991:120:8",
                      "statements": [
                        {
                          "expression": {
                            "id": 1159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1157,
                              "name": "tokenOutput",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1118,
                              "src": "2006:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1158,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 903,
                              "src": "2020:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$692",
                                "typeString": "contract ERC20"
                              }
                            },
                            "src": "2006:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 1160,
                          "nodeType": "ExpressionStatement",
                          "src": "2006:20:8"
                        },
                        {
                          "expression": {
                            "id": 1171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1161,
                              "name": "outputAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "2041:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1162,
                                  "name": "inputAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1114,
                                  "src": "2056:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1163,
                                  "name": "price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 908,
                                  "src": "2070:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2056:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1169,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2078:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1166,
                                      "name": "_token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1112,
                                      "src": "2082:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$692",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1167,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 179,
                                    "src": "2082:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 1168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2082:17:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "2078:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2056:43:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2041:58:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1172,
                          "nodeType": "ExpressionStatement",
                          "src": "2041:58:8"
                        }
                      ]
                    }
                  },
                  "id": 1175,
                  "nodeType": "IfStatement",
                  "src": "1777:334:8",
                  "trueBody": {
                    "id": 1147,
                    "nodeType": "Block",
                    "src": "1816:120:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1131,
                            "name": "tokenOutput",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "1831:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1132,
                            "name": "token2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "1845:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$692",
                              "typeString": "contract ERC20"
                            }
                          },
                          "src": "1831:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$692",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 1134,
                        "nodeType": "ExpressionStatement",
                        "src": "1831:20:8"
                      },
                      {
                        "expression": {
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1135,
                            "name": "outputAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "1866:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1136,
                                "name": "inputAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1114,
                                "src": "1881:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1137,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1895:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 1138,
                                      "name": "_token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1112,
                                      "src": "1899:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$692",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1139,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 179,
                                    "src": "1899:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 1140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1899:17:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1895:21:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1881:35:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1143,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "1919:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1881:43:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1866:58:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1146,
                        "nodeType": "ExpressionStatement",
                        "src": "1866:58:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1176,
                        "name": "tokenOutput",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "2145:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$692",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 1177,
                        "name": "outputAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "2171:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 1178,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2130:64:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_ERC20_$692_$_t_uint256_$",
                      "typeString": "tuple(contract ERC20,uint256)"
                    }
                  },
                  "functionReturnParameters": 1121,
                  "id": 1179,
                  "nodeType": "Return",
                  "src": "2123:71:8"
                }
              ]
            },
            "id": 1181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1669:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1111,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1110,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "1669:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "1669:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1114,
                  "mutability": "mutable",
                  "name": "inputAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1683:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1668:32:8"
            },
            "returnParameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1118,
                  "mutability": "mutable",
                  "name": "tokenOutput",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1723:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$692",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 1117,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1116,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 692,
                      "src": "1723:5:8"
                    },
                    "referencedDeclaration": 692,
                    "src": "1723:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$692",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "outputAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "1742:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1742:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1722:38:8"
            },
            "scope": 1182,
            "src": "1646:556:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1183,
        "src": "199:2006:8"
      }
    ],
    "src": "59:2146:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.1+commit.df193b15.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x80D3bB5DB784c7012CF607eD324C369aC657E004",
      "transactionHash": "0x082e5dd20969d5829fbb3cbf3151e6e8428dee99c185d7be40c7b440469c9ad7"
    }
  },
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-03-23T20:45:03.212Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}